const TextAiDetectionCreate = {"body":{"type":"object","properties":{"settings":{"type":"string","default":{},"description":"A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     "},"providers":{"type":"array","items":{"type":"string","minLength":1},"description":"It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.<br>             Providers can also be invoked with specific models (ex: providers: **'amazon/model1, amazon/model2, google/model3'**)"},"fallback_providers":{"type":"array","items":{"type":"string"},"default":[],"description":"Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ","maxItems":5},"response_as_dict":{"type":"boolean","default":true,"description":"Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "},"attributes_as_list":{"type":"boolean","default":false,"description":"Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "},"show_base_64":{"type":"boolean","default":true},"show_original_response":{"type":"boolean","default":false,"description":"Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."},"provider_params":{"type":"string","description":"\nParameters specific to the provider that you want to send along the request.\n\nit should take a *provider* name as key and an object of parameters as value.\n\nExample:\n\n    {\n      \"deepgram\": {\n        \"filler_words\": true,\n        \"smart_format\": true,\n        \"callback\": \"https://webhook.site/0000\"\n      },\n      \"assembly\": {\n        \"webhook_url\": \"https://webhook.site/0000\"\n      }\n    }\n\nPlease refer to the documentation of each provider to see which parameters to send.\n"},"text":{"type":"string","minLength":1,"description":"Text to analyze","examples":["The panther, also known as the black panther, is a magnificent and enigmatic creature that captivates the imagination of many. It is not a distinct species itself, but rather a melanistic variant of leopards and jaguars. The mesmerizing black coat of the panther is a result of a genetic mutation that increases the production of dark pigment, melanin.         Panthers are highly adaptable predators, found primarily in dense forests and jungles across Africa, Asia, and the Americas. Their stealthy nature and exceptional agility make them formidable hunters. They are solitary creatures, preferring to roam alone in their vast territories, which can span over a hundred square miles.         Equipped with incredible strength and sharp retractable claws, panthers are skilled climbers and swimmers. Their keen senses, including sharp vision and acute hearing, aid them in locating prey, often stalking their victims from the cover of trees or thick underbrush before launching a precise and powerful attack.         The diet of a panther consists mainly of deer, wild boar, and smaller mammals. However, they are opportunistic hunters and can also target livestock and domestic animals in areas where their habitats overlap with human settlements. Unfortunately, this sometimes leads to conflicts with humans, resulting in the panther being perceived as a threat.         Despite their association with darkness and mystery, panthers play a vital role in maintaining the balance of ecosystems. As apex predators, they help control populations of herbivores, preventing overgrazing and maintaining healthy prey dynamics.         Conservation efforts are crucial to the survival of panther populations worldwide. Habitat loss, poaching, and illegal wildlife trade pose significant threats to their existence. Various organizations and governments are working tirelessly to protect these magnificent creatures through initiatives such as establishing protected areas, promoting sustainable land use practices, and raising awareness about their importance in the natural world."]}},"required":["providers","text"],"$schema":"http://json-schema.org/draft-04/schema#"},"response":{"200":{"properties":{"sapling":{"required":["ai_score","status"],"title":"textai_detectionAiDetectionDataClass","type":"object","properties":{"ai_score":{"title":"Ai Score","type":"integer"},"items":{"title":"Items","type":"array","items":{"required":["text","prediction","ai_score","ai_score_detail"],"title":"AiDetectionItem","type":"object","properties":{"text":{"title":"Text","type":"string"},"prediction":{"title":"Prediction","type":"string"},"ai_score":{"title":"Ai Score","type":"integer"},"ai_score_detail":{"title":"Ai Score Detail","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"winstonai":{"required":["ai_score","status"],"title":"textai_detectionAiDetectionDataClass","type":"object","properties":{"ai_score":{"title":"Ai Score","type":"integer"},"items":{"title":"Items","type":"array","items":{"required":["text","prediction","ai_score","ai_score_detail"],"title":"AiDetectionItem","type":"object","properties":{"text":{"title":"Text","type":"string"},"prediction":{"title":"Prediction","type":"string"},"ai_score":{"title":"Ai Score","type":"integer"},"ai_score_detail":{"title":"Ai Score Detail","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"originalityai":{"required":["ai_score","status"],"title":"textai_detectionAiDetectionDataClass","type":"object","properties":{"ai_score":{"title":"Ai Score","type":"integer"},"items":{"title":"Items","type":"array","items":{"required":["text","prediction","ai_score","ai_score_detail"],"title":"AiDetectionItem","type":"object","properties":{"text":{"title":"Text","type":"string"},"prediction":{"title":"Prediction","type":"string"},"ai_score":{"title":"Ai Score","type":"integer"},"ai_score_detail":{"title":"Ai Score Detail","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}}},"title":"textai_detectionResponseModel","type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"object","properties":{"<parameter_name>":{"type":"array","items":{"type":"string"}}},"required":["<parameter_name>"]}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"string"}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"details":{"type":"string","default":"Not Found"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"string"}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const TextAnonymizationCreate = {"body":{"type":"object","properties":{"settings":{"type":"string","default":{},"description":"A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     "},"providers":{"type":"array","items":{"type":"string","minLength":1},"description":"It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.<br>             Providers can also be invoked with specific models (ex: providers: **'amazon/model1, amazon/model2, google/model3'**)"},"fallback_providers":{"type":"array","items":{"type":"string"},"default":[],"description":"Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ","maxItems":5},"response_as_dict":{"type":"boolean","default":true,"description":"Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "},"attributes_as_list":{"type":"boolean","default":false,"description":"Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "},"show_base_64":{"type":"boolean","default":true},"show_original_response":{"type":"boolean","default":false,"description":"Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."},"text":{"type":"string","minLength":1,"description":"Text to analyze","examples":["Overall I am satisfied with my experience at Amazon, but two areas of major improvement needed. First is the product reviews and pricing. There are thousands of positive reviews for so many items, and it's clear that the reviews are bogus or not really associated with that product. There needs to be a way to only view products sold by Amazon directly, because many market sellers way overprice items that can be purchased cheaper elsewhere (like Walmart, Target, etc). The second issue is they make it too difficult to get help when there's an issue with an order."]},"language":{"type":["string","null"],"description":"Language code for the language the input text is written in (eg: en, fr).","examples":["en"]}},"required":["providers","text"],"$schema":"http://json-schema.org/draft-04/schema#"},"response":{"200":{"properties":{"oneai":{"required":["result","status"],"title":"textanonymizationAnonymizationDataClass","type":"object","properties":{"result":{"title":"Result","type":"string"},"entities":{"title":"Entities","type":"array","items":{"description":"This model represents an entity extracted from the text.\n\nAttributes:\n    offset (int): The offset of the entity in the text.\n    length (int): The lenght of the entity in the text.\n    category (CategoryType): The category of the entity.\n    subcategory (SubCategoryType): The subcategory of the entity.\n    original_label (str): The original label of the entity.\n    content (str): The content of the entity.","required":["offset","length","category","subcategory","original_label","content","confidence_score"],"title":"AnonymizationEntity","type":"object","properties":{"offset":{"minimum":0,"title":"Offset","type":"integer"},"length":{"exclusiveMinimum":true,"title":"Length","type":"integer"},"category":{"description":"This enum are used to categorize the entities extracted from the text.\n\n`PersonalInformation` `FinancialInformation` `IdentificationNumbers` `Miscellaneous` `OrganizationInformation` `DateAndTime` `LocationInformation` `Other`","enum":["PersonalInformation","FinancialInformation","IdentificationNumbers","Miscellaneous","OrganizationInformation","DateAndTime","LocationInformation","Other"],"title":"CategoryType","type":"string"},"subcategory":{"anyOf":[{"enum":["CreditCard","CardExpiry","BankAccountNumber","BankRoutingNumber","SwiftCode","TaxIdentificationNumber"],"title":"FinancialInformationSubCategoryType","type":"string","description":"`CreditCard` `CardExpiry` `BankAccountNumber` `BankRoutingNumber` `SwiftCode` `TaxIdentificationNumber`"},{"enum":["Name","Age","Email","Phone","PersonType","Gender"],"title":"PersonalInformationSubCategoryType","type":"string","description":"`Name` `Age` `Email` `Phone` `PersonType` `Gender`"},{"enum":["SocialSecurityNumber","NationalIdentificationNumber","NationalHealthService","ResidentRegistrationNumber","DriverLicenseNumber","PassportNumber"],"title":"IdentificationNumbersSubCategoryType","type":"string","description":"`SocialSecurityNumber` `NationalIdentificationNumber` `NationalHealthService` `ResidentRegistrationNumber` `DriverLicenseNumber` `PassportNumber`"},{"enum":["URL","IP","MAC","VehicleIdentificationNumber","LicensePlate","VoterNumber","AWSKeys","AzureKeys","Password"],"title":"MiscellaneousSubCategoryType","type":"string","description":"`URL` `IP` `MAC` `VehicleIdentificationNumber` `LicensePlate` `VoterNumber` `AWSKeys` `AzureKeys` `Password`"},{"enum":["CompanyName","CompanyNumber","BuisnessNumber"],"title":"OrganizationSubCategoryType","type":"string","description":"`CompanyName` `CompanyNumber` `BuisnessNumber`"},{"enum":["Date","Time","DateTime","Duration"],"title":"DateAndTimeSubCategoryType","type":"string","description":"`Date` `Time` `DateTime` `Duration`"},{"enum":["Address","Location"],"title":"LocationInformationSubCategoryType","type":"string","description":"`Address` `Location`"},{"enum":["Other","Anonymized","Nerd","Wsd","Unknown"],"title":"OtherSubCategoryType","type":"string","description":"`Other` `Anonymized` `Nerd` `Wsd` `Unknown`"}],"title":"Subcategory"},"original_label":{"minLength":1,"title":"Original Label","type":"string"},"content":{"minLength":1,"title":"Content","type":"string"},"confidence_score":{"maximum":1,"minimum":0,"title":"Confidence Score","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"privateai":{"required":["result","status"],"title":"textanonymizationAnonymizationDataClass","type":"object","properties":{"result":{"title":"Result","type":"string"},"entities":{"title":"Entities","type":"array","items":{"description":"This model represents an entity extracted from the text.\n\nAttributes:\n    offset (int): The offset of the entity in the text.\n    length (int): The lenght of the entity in the text.\n    category (CategoryType): The category of the entity.\n    subcategory (SubCategoryType): The subcategory of the entity.\n    original_label (str): The original label of the entity.\n    content (str): The content of the entity.","required":["offset","length","category","subcategory","original_label","content","confidence_score"],"title":"AnonymizationEntity","type":"object","properties":{"offset":{"minimum":0,"title":"Offset","type":"integer"},"length":{"exclusiveMinimum":true,"title":"Length","type":"integer"},"category":{"description":"This enum are used to categorize the entities extracted from the text.\n\n`PersonalInformation` `FinancialInformation` `IdentificationNumbers` `Miscellaneous` `OrganizationInformation` `DateAndTime` `LocationInformation` `Other`","enum":["PersonalInformation","FinancialInformation","IdentificationNumbers","Miscellaneous","OrganizationInformation","DateAndTime","LocationInformation","Other"],"title":"CategoryType","type":"string"},"subcategory":{"anyOf":[{"enum":["CreditCard","CardExpiry","BankAccountNumber","BankRoutingNumber","SwiftCode","TaxIdentificationNumber"],"title":"FinancialInformationSubCategoryType","type":"string","description":"`CreditCard` `CardExpiry` `BankAccountNumber` `BankRoutingNumber` `SwiftCode` `TaxIdentificationNumber`"},{"enum":["Name","Age","Email","Phone","PersonType","Gender"],"title":"PersonalInformationSubCategoryType","type":"string","description":"`Name` `Age` `Email` `Phone` `PersonType` `Gender`"},{"enum":["SocialSecurityNumber","NationalIdentificationNumber","NationalHealthService","ResidentRegistrationNumber","DriverLicenseNumber","PassportNumber"],"title":"IdentificationNumbersSubCategoryType","type":"string","description":"`SocialSecurityNumber` `NationalIdentificationNumber` `NationalHealthService` `ResidentRegistrationNumber` `DriverLicenseNumber` `PassportNumber`"},{"enum":["URL","IP","MAC","VehicleIdentificationNumber","LicensePlate","VoterNumber","AWSKeys","AzureKeys","Password"],"title":"MiscellaneousSubCategoryType","type":"string","description":"`URL` `IP` `MAC` `VehicleIdentificationNumber` `LicensePlate` `VoterNumber` `AWSKeys` `AzureKeys` `Password`"},{"enum":["CompanyName","CompanyNumber","BuisnessNumber"],"title":"OrganizationSubCategoryType","type":"string","description":"`CompanyName` `CompanyNumber` `BuisnessNumber`"},{"enum":["Date","Time","DateTime","Duration"],"title":"DateAndTimeSubCategoryType","type":"string","description":"`Date` `Time` `DateTime` `Duration`"},{"enum":["Address","Location"],"title":"LocationInformationSubCategoryType","type":"string","description":"`Address` `Location`"},{"enum":["Other","Anonymized","Nerd","Wsd","Unknown"],"title":"OtherSubCategoryType","type":"string","description":"`Other` `Anonymized` `Nerd` `Wsd` `Unknown`"}],"title":"Subcategory"},"original_label":{"minLength":1,"title":"Original Label","type":"string"},"content":{"minLength":1,"title":"Content","type":"string"},"confidence_score":{"maximum":1,"minimum":0,"title":"Confidence Score","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"emvista":{"required":["result","status"],"title":"textanonymizationAnonymizationDataClass","type":"object","properties":{"result":{"title":"Result","type":"string"},"entities":{"title":"Entities","type":"array","items":{"description":"This model represents an entity extracted from the text.\n\nAttributes:\n    offset (int): The offset of the entity in the text.\n    length (int): The lenght of the entity in the text.\n    category (CategoryType): The category of the entity.\n    subcategory (SubCategoryType): The subcategory of the entity.\n    original_label (str): The original label of the entity.\n    content (str): The content of the entity.","required":["offset","length","category","subcategory","original_label","content","confidence_score"],"title":"AnonymizationEntity","type":"object","properties":{"offset":{"minimum":0,"title":"Offset","type":"integer"},"length":{"exclusiveMinimum":true,"title":"Length","type":"integer"},"category":{"description":"This enum are used to categorize the entities extracted from the text.\n\n`PersonalInformation` `FinancialInformation` `IdentificationNumbers` `Miscellaneous` `OrganizationInformation` `DateAndTime` `LocationInformation` `Other`","enum":["PersonalInformation","FinancialInformation","IdentificationNumbers","Miscellaneous","OrganizationInformation","DateAndTime","LocationInformation","Other"],"title":"CategoryType","type":"string"},"subcategory":{"anyOf":[{"enum":["CreditCard","CardExpiry","BankAccountNumber","BankRoutingNumber","SwiftCode","TaxIdentificationNumber"],"title":"FinancialInformationSubCategoryType","type":"string","description":"`CreditCard` `CardExpiry` `BankAccountNumber` `BankRoutingNumber` `SwiftCode` `TaxIdentificationNumber`"},{"enum":["Name","Age","Email","Phone","PersonType","Gender"],"title":"PersonalInformationSubCategoryType","type":"string","description":"`Name` `Age` `Email` `Phone` `PersonType` `Gender`"},{"enum":["SocialSecurityNumber","NationalIdentificationNumber","NationalHealthService","ResidentRegistrationNumber","DriverLicenseNumber","PassportNumber"],"title":"IdentificationNumbersSubCategoryType","type":"string","description":"`SocialSecurityNumber` `NationalIdentificationNumber` `NationalHealthService` `ResidentRegistrationNumber` `DriverLicenseNumber` `PassportNumber`"},{"enum":["URL","IP","MAC","VehicleIdentificationNumber","LicensePlate","VoterNumber","AWSKeys","AzureKeys","Password"],"title":"MiscellaneousSubCategoryType","type":"string","description":"`URL` `IP` `MAC` `VehicleIdentificationNumber` `LicensePlate` `VoterNumber` `AWSKeys` `AzureKeys` `Password`"},{"enum":["CompanyName","CompanyNumber","BuisnessNumber"],"title":"OrganizationSubCategoryType","type":"string","description":"`CompanyName` `CompanyNumber` `BuisnessNumber`"},{"enum":["Date","Time","DateTime","Duration"],"title":"DateAndTimeSubCategoryType","type":"string","description":"`Date` `Time` `DateTime` `Duration`"},{"enum":["Address","Location"],"title":"LocationInformationSubCategoryType","type":"string","description":"`Address` `Location`"},{"enum":["Other","Anonymized","Nerd","Wsd","Unknown"],"title":"OtherSubCategoryType","type":"string","description":"`Other` `Anonymized` `Nerd` `Wsd` `Unknown`"}],"title":"Subcategory"},"original_label":{"minLength":1,"title":"Original Label","type":"string"},"content":{"minLength":1,"title":"Content","type":"string"},"confidence_score":{"maximum":1,"minimum":0,"title":"Confidence Score","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"microsoft":{"required":["result","status"],"title":"textanonymizationAnonymizationDataClass","type":"object","properties":{"result":{"title":"Result","type":"string"},"entities":{"title":"Entities","type":"array","items":{"description":"This model represents an entity extracted from the text.\n\nAttributes:\n    offset (int): The offset of the entity in the text.\n    length (int): The lenght of the entity in the text.\n    category (CategoryType): The category of the entity.\n    subcategory (SubCategoryType): The subcategory of the entity.\n    original_label (str): The original label of the entity.\n    content (str): The content of the entity.","required":["offset","length","category","subcategory","original_label","content","confidence_score"],"title":"AnonymizationEntity","type":"object","properties":{"offset":{"minimum":0,"title":"Offset","type":"integer"},"length":{"exclusiveMinimum":true,"title":"Length","type":"integer"},"category":{"description":"This enum are used to categorize the entities extracted from the text.\n\n`PersonalInformation` `FinancialInformation` `IdentificationNumbers` `Miscellaneous` `OrganizationInformation` `DateAndTime` `LocationInformation` `Other`","enum":["PersonalInformation","FinancialInformation","IdentificationNumbers","Miscellaneous","OrganizationInformation","DateAndTime","LocationInformation","Other"],"title":"CategoryType","type":"string"},"subcategory":{"anyOf":[{"enum":["CreditCard","CardExpiry","BankAccountNumber","BankRoutingNumber","SwiftCode","TaxIdentificationNumber"],"title":"FinancialInformationSubCategoryType","type":"string","description":"`CreditCard` `CardExpiry` `BankAccountNumber` `BankRoutingNumber` `SwiftCode` `TaxIdentificationNumber`"},{"enum":["Name","Age","Email","Phone","PersonType","Gender"],"title":"PersonalInformationSubCategoryType","type":"string","description":"`Name` `Age` `Email` `Phone` `PersonType` `Gender`"},{"enum":["SocialSecurityNumber","NationalIdentificationNumber","NationalHealthService","ResidentRegistrationNumber","DriverLicenseNumber","PassportNumber"],"title":"IdentificationNumbersSubCategoryType","type":"string","description":"`SocialSecurityNumber` `NationalIdentificationNumber` `NationalHealthService` `ResidentRegistrationNumber` `DriverLicenseNumber` `PassportNumber`"},{"enum":["URL","IP","MAC","VehicleIdentificationNumber","LicensePlate","VoterNumber","AWSKeys","AzureKeys","Password"],"title":"MiscellaneousSubCategoryType","type":"string","description":"`URL` `IP` `MAC` `VehicleIdentificationNumber` `LicensePlate` `VoterNumber` `AWSKeys` `AzureKeys` `Password`"},{"enum":["CompanyName","CompanyNumber","BuisnessNumber"],"title":"OrganizationSubCategoryType","type":"string","description":"`CompanyName` `CompanyNumber` `BuisnessNumber`"},{"enum":["Date","Time","DateTime","Duration"],"title":"DateAndTimeSubCategoryType","type":"string","description":"`Date` `Time` `DateTime` `Duration`"},{"enum":["Address","Location"],"title":"LocationInformationSubCategoryType","type":"string","description":"`Address` `Location`"},{"enum":["Other","Anonymized","Nerd","Wsd","Unknown"],"title":"OtherSubCategoryType","type":"string","description":"`Other` `Anonymized` `Nerd` `Wsd` `Unknown`"}],"title":"Subcategory"},"original_label":{"minLength":1,"title":"Original Label","type":"string"},"content":{"minLength":1,"title":"Content","type":"string"},"confidence_score":{"maximum":1,"minimum":0,"title":"Confidence Score","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"openai":{"required":["result","status"],"title":"textanonymizationAnonymizationDataClass","type":"object","properties":{"result":{"title":"Result","type":"string"},"entities":{"title":"Entities","type":"array","items":{"description":"This model represents an entity extracted from the text.\n\nAttributes:\n    offset (int): The offset of the entity in the text.\n    length (int): The lenght of the entity in the text.\n    category (CategoryType): The category of the entity.\n    subcategory (SubCategoryType): The subcategory of the entity.\n    original_label (str): The original label of the entity.\n    content (str): The content of the entity.","required":["offset","length","category","subcategory","original_label","content","confidence_score"],"title":"AnonymizationEntity","type":"object","properties":{"offset":{"minimum":0,"title":"Offset","type":"integer"},"length":{"exclusiveMinimum":true,"title":"Length","type":"integer"},"category":{"description":"This enum are used to categorize the entities extracted from the text.\n\n`PersonalInformation` `FinancialInformation` `IdentificationNumbers` `Miscellaneous` `OrganizationInformation` `DateAndTime` `LocationInformation` `Other`","enum":["PersonalInformation","FinancialInformation","IdentificationNumbers","Miscellaneous","OrganizationInformation","DateAndTime","LocationInformation","Other"],"title":"CategoryType","type":"string"},"subcategory":{"anyOf":[{"enum":["CreditCard","CardExpiry","BankAccountNumber","BankRoutingNumber","SwiftCode","TaxIdentificationNumber"],"title":"FinancialInformationSubCategoryType","type":"string","description":"`CreditCard` `CardExpiry` `BankAccountNumber` `BankRoutingNumber` `SwiftCode` `TaxIdentificationNumber`"},{"enum":["Name","Age","Email","Phone","PersonType","Gender"],"title":"PersonalInformationSubCategoryType","type":"string","description":"`Name` `Age` `Email` `Phone` `PersonType` `Gender`"},{"enum":["SocialSecurityNumber","NationalIdentificationNumber","NationalHealthService","ResidentRegistrationNumber","DriverLicenseNumber","PassportNumber"],"title":"IdentificationNumbersSubCategoryType","type":"string","description":"`SocialSecurityNumber` `NationalIdentificationNumber` `NationalHealthService` `ResidentRegistrationNumber` `DriverLicenseNumber` `PassportNumber`"},{"enum":["URL","IP","MAC","VehicleIdentificationNumber","LicensePlate","VoterNumber","AWSKeys","AzureKeys","Password"],"title":"MiscellaneousSubCategoryType","type":"string","description":"`URL` `IP` `MAC` `VehicleIdentificationNumber` `LicensePlate` `VoterNumber` `AWSKeys` `AzureKeys` `Password`"},{"enum":["CompanyName","CompanyNumber","BuisnessNumber"],"title":"OrganizationSubCategoryType","type":"string","description":"`CompanyName` `CompanyNumber` `BuisnessNumber`"},{"enum":["Date","Time","DateTime","Duration"],"title":"DateAndTimeSubCategoryType","type":"string","description":"`Date` `Time` `DateTime` `Duration`"},{"enum":["Address","Location"],"title":"LocationInformationSubCategoryType","type":"string","description":"`Address` `Location`"},{"enum":["Other","Anonymized","Nerd","Wsd","Unknown"],"title":"OtherSubCategoryType","type":"string","description":"`Other` `Anonymized` `Nerd` `Wsd` `Unknown`"}],"title":"Subcategory"},"original_label":{"minLength":1,"title":"Original Label","type":"string"},"content":{"minLength":1,"title":"Content","type":"string"},"confidence_score":{"maximum":1,"minimum":0,"title":"Confidence Score","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"amazon":{"required":["result","status"],"title":"textanonymizationAnonymizationDataClass","type":"object","properties":{"result":{"title":"Result","type":"string"},"entities":{"title":"Entities","type":"array","items":{"description":"This model represents an entity extracted from the text.\n\nAttributes:\n    offset (int): The offset of the entity in the text.\n    length (int): The lenght of the entity in the text.\n    category (CategoryType): The category of the entity.\n    subcategory (SubCategoryType): The subcategory of the entity.\n    original_label (str): The original label of the entity.\n    content (str): The content of the entity.","required":["offset","length","category","subcategory","original_label","content","confidence_score"],"title":"AnonymizationEntity","type":"object","properties":{"offset":{"minimum":0,"title":"Offset","type":"integer"},"length":{"exclusiveMinimum":true,"title":"Length","type":"integer"},"category":{"description":"This enum are used to categorize the entities extracted from the text.\n\n`PersonalInformation` `FinancialInformation` `IdentificationNumbers` `Miscellaneous` `OrganizationInformation` `DateAndTime` `LocationInformation` `Other`","enum":["PersonalInformation","FinancialInformation","IdentificationNumbers","Miscellaneous","OrganizationInformation","DateAndTime","LocationInformation","Other"],"title":"CategoryType","type":"string"},"subcategory":{"anyOf":[{"enum":["CreditCard","CardExpiry","BankAccountNumber","BankRoutingNumber","SwiftCode","TaxIdentificationNumber"],"title":"FinancialInformationSubCategoryType","type":"string","description":"`CreditCard` `CardExpiry` `BankAccountNumber` `BankRoutingNumber` `SwiftCode` `TaxIdentificationNumber`"},{"enum":["Name","Age","Email","Phone","PersonType","Gender"],"title":"PersonalInformationSubCategoryType","type":"string","description":"`Name` `Age` `Email` `Phone` `PersonType` `Gender`"},{"enum":["SocialSecurityNumber","NationalIdentificationNumber","NationalHealthService","ResidentRegistrationNumber","DriverLicenseNumber","PassportNumber"],"title":"IdentificationNumbersSubCategoryType","type":"string","description":"`SocialSecurityNumber` `NationalIdentificationNumber` `NationalHealthService` `ResidentRegistrationNumber` `DriverLicenseNumber` `PassportNumber`"},{"enum":["URL","IP","MAC","VehicleIdentificationNumber","LicensePlate","VoterNumber","AWSKeys","AzureKeys","Password"],"title":"MiscellaneousSubCategoryType","type":"string","description":"`URL` `IP` `MAC` `VehicleIdentificationNumber` `LicensePlate` `VoterNumber` `AWSKeys` `AzureKeys` `Password`"},{"enum":["CompanyName","CompanyNumber","BuisnessNumber"],"title":"OrganizationSubCategoryType","type":"string","description":"`CompanyName` `CompanyNumber` `BuisnessNumber`"},{"enum":["Date","Time","DateTime","Duration"],"title":"DateAndTimeSubCategoryType","type":"string","description":"`Date` `Time` `DateTime` `Duration`"},{"enum":["Address","Location"],"title":"LocationInformationSubCategoryType","type":"string","description":"`Address` `Location`"},{"enum":["Other","Anonymized","Nerd","Wsd","Unknown"],"title":"OtherSubCategoryType","type":"string","description":"`Other` `Anonymized` `Nerd` `Wsd` `Unknown`"}],"title":"Subcategory"},"original_label":{"minLength":1,"title":"Original Label","type":"string"},"content":{"minLength":1,"title":"Content","type":"string"},"confidence_score":{"maximum":1,"minimum":0,"title":"Confidence Score","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}}},"title":"textanonymizationResponseModel","type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"object","properties":{"<parameter_name>":{"type":"array","items":{"type":"string"}}},"required":["<parameter_name>"]}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"string"}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"details":{"type":"string","default":"Not Found"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"string"}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const TextChatCreate = {"body":{"type":"object","properties":{"settings":{"type":"string","default":{},"description":"A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     "},"providers":{"type":"array","items":{"type":"string","minLength":1},"description":"It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.<br>             Providers can also be invoked with specific models (ex: providers: **'amazon/model1, amazon/model2, google/model3'**)"},"fallback_providers":{"type":"array","items":{"type":"string"},"default":[],"description":"Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ","maxItems":5},"response_as_dict":{"type":"boolean","default":true,"description":"Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "},"attributes_as_list":{"type":"boolean","default":false,"description":"Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "},"show_base_64":{"type":"boolean","default":true},"show_original_response":{"type":"boolean","default":false,"description":"Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."},"text":{"type":["string","null"],"description":"Start your conversation here...","examples":["Barack Hussein Obama is an American politician who served as the 44th president of the United States from 2009 to 2017. A member of the Democratic Party, Obama was the first African-American president of the United States. He previously served as a U.S. senator from Illinois from 2005 to 2008 and as an Illinois state senator from 1997 to 2004."]},"chatbot_global_action":{"type":["string","null"],"description":"A system message that helps set the behavior of the assistant. For example, 'You are a helpful assistant'.","examples":["You are a keyword extractor. Extract Only the word from the text provided."]},"previous_history":{"type":"array","items":{"type":"object","properties":{"role":{"type":"string","minLength":1,"examples":["user"]},"message":{},"tools":{"type":["array","null"],"items":{"type":"object","properties":{"name":{"type":"string","minLength":1,"description":"The name of your tool/function"},"description":{"type":"string"},"parameters":{"description":"The tool's parameters are specified using a JSON Schema object. Detailed format documentation is available in the [JSON Schema reference](https://json-schema.org/understanding-json-schema/).\n\n**Make sure to well describe each parameter for best results.**\n\n\nExample for a weather tool:\n\n    {\n      \"type\": \"object\",\n      \"properties\": {\n        \"location\": {\n          \"type\": \"string\"\n          \"description\": \"The geographical location for which weather data is requested.\"\n        },\n        \"unit\": {\n          \"type\": \"string\", \"enum\": [\"Celsius\", \"Fahrenheit\"]\n          \"description\": \"The unit of measurement for temperature.\"\n        }\n      },\n      \"required\": [\"location\"]\n    }\n    "}},"required":["description","name","parameters"]}},"tool_calls":{"type":["array","null"],"items":{"type":"object","properties":{"id":{"type":"string","minLength":1},"name":{"type":"string","minLength":1},"arguments":{"type":"string","minLength":1}},"required":["arguments","id","name"]}}},"required":["message","role"]},"description":"A list containing all the previous conversations between the user and the chatbot AI. Each item in the list should be a dictionary with two keys: 'role' and 'message'. The 'role' key specifies the role of the speaker and can have the values 'user' or 'assistant'. The 'message' key contains the text of the conversation from the respective role. For example: [{'role': 'user', 'message': 'Hello'}, {'role': 'assistant', 'message': 'Hi, how can I help you?'}, ...]. This format allows easy identification of the speaker's role and their corresponding message."},"temperature":{"type":"number","format":"double","maximum":2,"minimum":0,"default":0,"description":"Higher values mean the model will take more risks and value 0 (argmax sampling) works better for scenarios with a well-defined answer."},"max_tokens":{"type":"integer","minimum":1,"default":1000,"description":"The maximum number of tokens to generate in the completion. The token count of your prompt plus max_tokens cannot exceed the model's context length.","examples":[100]},"tool_choice":{"default":"auto","description":"* `auto` - auto\n* `required` - required\n* `none` - none\n\nDefault: `auto`","enum":["auto","required","none"],"type":"string"},"available_tools":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","minLength":1,"description":"The name of your tool/function"},"description":{"type":"string"},"parameters":{"description":"The tool's parameters are specified using a JSON Schema object. Detailed format documentation is available in the [JSON Schema reference](https://json-schema.org/understanding-json-schema/).\n\n**Make sure to well describe each parameter for best results.**\n\n\nExample for a weather tool:\n\n    {\n      \"type\": \"object\",\n      \"properties\": {\n        \"location\": {\n          \"type\": \"string\"\n          \"description\": \"The geographical location for which weather data is requested.\"\n        },\n        \"unit\": {\n          \"type\": \"string\", \"enum\": [\"Celsius\", \"Fahrenheit\"]\n          \"description\": \"The unit of measurement for temperature.\"\n        }\n      },\n      \"required\": [\"location\"]\n    }\n    "}},"required":["description","name","parameters"]},"description":"A list of tools the model may generate the right arguments for."},"tool_results":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","minLength":1,"description":"the id of the `tool_call` used to generate result"},"result":{"type":"string","minLength":1,"description":"the result of your function"}},"required":["id","result"]},"description":"List of results obtained from applying the tool_call arguments to your own tool."}},"required":["providers"],"$schema":"http://json-schema.org/draft-04/schema#"},"response":{"200":{"properties":{"meta":{"required":["generated_text","status"],"title":"textchatChatDataClass","type":"object","properties":{"generated_text":{"title":"Generated Text","type":"string"},"message":{"title":"Message","type":"array","items":{"required":["role"],"title":"ChatMessageDataClass","type":"object","properties":{"role":{"title":"Role","type":"string"},"message":{"title":"Message","type":"string"},"tools":{"default":null,"description":"Tools defined by the user","title":"Tools","type":"array","items":{"type":"object","additionalProperties":true}},"tool_calls":{"default":null,"description":"The tools arguments generated from tools definition and user prompt.","title":"Tool Calls","type":"array","items":{"required":["id","name","arguments"],"title":"ToolCall","type":"object","properties":{"id":{"title":"Id","type":"string"},"name":{"title":"Name","type":"string"},"arguments":{"title":"Arguments","type":"string"}}}}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"anthropic":{"required":["generated_text","status"],"title":"textchatChatDataClass","type":"object","properties":{"generated_text":{"title":"Generated Text","type":"string"},"message":{"title":"Message","type":"array","items":{"required":["role"],"title":"ChatMessageDataClass","type":"object","properties":{"role":{"title":"Role","type":"string"},"message":{"title":"Message","type":"string"},"tools":{"default":null,"description":"Tools defined by the user","title":"Tools","type":"array","items":{"type":"object","additionalProperties":true}},"tool_calls":{"default":null,"description":"The tools arguments generated from tools definition and user prompt.","title":"Tool Calls","type":"array","items":{"required":["id","name","arguments"],"title":"ToolCall","type":"object","properties":{"id":{"title":"Id","type":"string"},"name":{"title":"Name","type":"string"},"arguments":{"title":"Arguments","type":"string"}}}}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"replicate":{"required":["generated_text","status"],"title":"textchatChatDataClass","type":"object","properties":{"generated_text":{"title":"Generated Text","type":"string"},"message":{"title":"Message","type":"array","items":{"required":["role"],"title":"ChatMessageDataClass","type":"object","properties":{"role":{"title":"Role","type":"string"},"message":{"title":"Message","type":"string"},"tools":{"default":null,"description":"Tools defined by the user","title":"Tools","type":"array","items":{"type":"object","additionalProperties":true}},"tool_calls":{"default":null,"description":"The tools arguments generated from tools definition and user prompt.","title":"Tool Calls","type":"array","items":{"required":["id","name","arguments"],"title":"ToolCall","type":"object","properties":{"id":{"title":"Id","type":"string"},"name":{"title":"Name","type":"string"},"arguments":{"title":"Arguments","type":"string"}}}}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"mistral":{"required":["generated_text","status"],"title":"textchatChatDataClass","type":"object","properties":{"generated_text":{"title":"Generated Text","type":"string"},"message":{"title":"Message","type":"array","items":{"required":["role"],"title":"ChatMessageDataClass","type":"object","properties":{"role":{"title":"Role","type":"string"},"message":{"title":"Message","type":"string"},"tools":{"default":null,"description":"Tools defined by the user","title":"Tools","type":"array","items":{"type":"object","additionalProperties":true}},"tool_calls":{"default":null,"description":"The tools arguments generated from tools definition and user prompt.","title":"Tool Calls","type":"array","items":{"required":["id","name","arguments"],"title":"ToolCall","type":"object","properties":{"id":{"title":"Id","type":"string"},"name":{"title":"Name","type":"string"},"arguments":{"title":"Arguments","type":"string"}}}}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"cohere":{"required":["generated_text","status"],"title":"textchatChatDataClass","type":"object","properties":{"generated_text":{"title":"Generated Text","type":"string"},"message":{"title":"Message","type":"array","items":{"required":["role"],"title":"ChatMessageDataClass","type":"object","properties":{"role":{"title":"Role","type":"string"},"message":{"title":"Message","type":"string"},"tools":{"default":null,"description":"Tools defined by the user","title":"Tools","type":"array","items":{"type":"object","additionalProperties":true}},"tool_calls":{"default":null,"description":"The tools arguments generated from tools definition and user prompt.","title":"Tool Calls","type":"array","items":{"required":["id","name","arguments"],"title":"ToolCall","type":"object","properties":{"id":{"title":"Id","type":"string"},"name":{"title":"Name","type":"string"},"arguments":{"title":"Arguments","type":"string"}}}}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"google":{"required":["generated_text","status"],"title":"textchatChatDataClass","type":"object","properties":{"generated_text":{"title":"Generated Text","type":"string"},"message":{"title":"Message","type":"array","items":{"required":["role"],"title":"ChatMessageDataClass","type":"object","properties":{"role":{"title":"Role","type":"string"},"message":{"title":"Message","type":"string"},"tools":{"default":null,"description":"Tools defined by the user","title":"Tools","type":"array","items":{"type":"object","additionalProperties":true}},"tool_calls":{"default":null,"description":"The tools arguments generated from tools definition and user prompt.","title":"Tool Calls","type":"array","items":{"required":["id","name","arguments"],"title":"ToolCall","type":"object","properties":{"id":{"title":"Id","type":"string"},"name":{"title":"Name","type":"string"},"arguments":{"title":"Arguments","type":"string"}}}}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"openai":{"required":["generated_text","status"],"title":"textchatChatDataClass","type":"object","properties":{"generated_text":{"title":"Generated Text","type":"string"},"message":{"title":"Message","type":"array","items":{"required":["role"],"title":"ChatMessageDataClass","type":"object","properties":{"role":{"title":"Role","type":"string"},"message":{"title":"Message","type":"string"},"tools":{"default":null,"description":"Tools defined by the user","title":"Tools","type":"array","items":{"type":"object","additionalProperties":true}},"tool_calls":{"default":null,"description":"The tools arguments generated from tools definition and user prompt.","title":"Tool Calls","type":"array","items":{"required":["id","name","arguments"],"title":"ToolCall","type":"object","properties":{"id":{"title":"Id","type":"string"},"name":{"title":"Name","type":"string"},"arguments":{"title":"Arguments","type":"string"}}}}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"perplexityai":{"required":["generated_text","status"],"title":"textchatChatDataClass","type":"object","properties":{"generated_text":{"title":"Generated Text","type":"string"},"message":{"title":"Message","type":"array","items":{"required":["role"],"title":"ChatMessageDataClass","type":"object","properties":{"role":{"title":"Role","type":"string"},"message":{"title":"Message","type":"string"},"tools":{"default":null,"description":"Tools defined by the user","title":"Tools","type":"array","items":{"type":"object","additionalProperties":true}},"tool_calls":{"default":null,"description":"The tools arguments generated from tools definition and user prompt.","title":"Tool Calls","type":"array","items":{"required":["id","name","arguments"],"title":"ToolCall","type":"object","properties":{"id":{"title":"Id","type":"string"},"name":{"title":"Name","type":"string"},"arguments":{"title":"Arguments","type":"string"}}}}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}}},"title":"textchatResponseModel","type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"object","properties":{"<parameter_name>":{"type":"array","items":{"type":"string"}}},"required":["<parameter_name>"]}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"string"}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"details":{"type":"string","default":"Not Found"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"string"}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const TextChatStreamCreate = {"body":{"type":"object","properties":{"settings":{"type":"string","default":{},"description":"A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     "},"providers":{"type":"array","items":{"type":"string","minLength":1},"description":"It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.<br>             Providers can also be invoked with specific models (ex: providers: **'amazon/model1, amazon/model2, google/model3'**)"},"fallback_providers":{"type":"array","items":{"type":"string"},"default":[],"description":"Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ","maxItems":5},"response_as_dict":{"type":"boolean","default":true,"description":"Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "},"attributes_as_list":{"type":"boolean","default":false,"description":"Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "},"show_base_64":{"type":"boolean","default":true},"show_original_response":{"type":"boolean","default":false,"description":"Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."},"text":{"type":["string","null"],"description":"Start your conversation here...","examples":["Barack Hussein Obama is an American politician who served as the 44th president of the United States from 2009 to 2017. A member of the Democratic Party, Obama was the first African-American president of the United States. He previously served as a U.S. senator from Illinois from 2005 to 2008 and as an Illinois state senator from 1997 to 2004."]},"chatbot_global_action":{"type":["string","null"],"description":"A system message that helps set the behavior of the assistant. For example, 'You are a helpful assistant'.","examples":["You are a keyword extractor. Extract Only the word from the text provided."]},"previous_history":{"type":"array","items":{"type":"object","properties":{"role":{"type":"string","minLength":1,"examples":["user"]},"message":{},"tools":{"type":["array","null"],"items":{"type":"object","properties":{"name":{"type":"string","minLength":1,"description":"The name of your tool/function"},"description":{"type":"string"},"parameters":{"description":"The tool's parameters are specified using a JSON Schema object. Detailed format documentation is available in the [JSON Schema reference](https://json-schema.org/understanding-json-schema/).\n\n**Make sure to well describe each parameter for best results.**\n\n\nExample for a weather tool:\n\n    {\n      \"type\": \"object\",\n      \"properties\": {\n        \"location\": {\n          \"type\": \"string\"\n          \"description\": \"The geographical location for which weather data is requested.\"\n        },\n        \"unit\": {\n          \"type\": \"string\", \"enum\": [\"Celsius\", \"Fahrenheit\"]\n          \"description\": \"The unit of measurement for temperature.\"\n        }\n      },\n      \"required\": [\"location\"]\n    }\n    "}},"required":["description","name","parameters"]}},"tool_calls":{"type":["array","null"],"items":{"type":"object","properties":{"id":{"type":"string","minLength":1},"name":{"type":"string","minLength":1},"arguments":{"type":"string","minLength":1}},"required":["arguments","id","name"]}}},"required":["message","role"]},"description":"A list containing all the previous conversations between the user and the chatbot AI. Each item in the list should be a dictionary with two keys: 'role' and 'message'. The 'role' key specifies the role of the speaker and can have the values 'user' or 'assistant'. The 'message' key contains the text of the conversation from the respective role. For example: [{'role': 'user', 'message': 'Hello'}, {'role': 'assistant', 'message': 'Hi, how can I help you?'}, ...]. This format allows easy identification of the speaker's role and their corresponding message."},"temperature":{"type":"number","format":"double","maximum":2,"minimum":0,"default":0,"description":"Higher values mean the model will take more risks and value 0 (argmax sampling) works better for scenarios with a well-defined answer."},"max_tokens":{"type":"integer","minimum":1,"default":1000,"description":"The maximum number of tokens to generate in the completion. The token count of your prompt plus max_tokens cannot exceed the model's context length.","examples":[100]},"tool_choice":{"default":"auto","description":"* `auto` - auto\n* `required` - required\n* `none` - none\n\nDefault: `auto`","enum":["auto","required","none"],"type":"string"},"available_tools":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","minLength":1,"description":"The name of your tool/function"},"description":{"type":"string"},"parameters":{"description":"The tool's parameters are specified using a JSON Schema object. Detailed format documentation is available in the [JSON Schema reference](https://json-schema.org/understanding-json-schema/).\n\n**Make sure to well describe each parameter for best results.**\n\n\nExample for a weather tool:\n\n    {\n      \"type\": \"object\",\n      \"properties\": {\n        \"location\": {\n          \"type\": \"string\"\n          \"description\": \"The geographical location for which weather data is requested.\"\n        },\n        \"unit\": {\n          \"type\": \"string\", \"enum\": [\"Celsius\", \"Fahrenheit\"]\n          \"description\": \"The unit of measurement for temperature.\"\n        }\n      },\n      \"required\": [\"location\"]\n    }\n    "}},"required":["description","name","parameters"]},"description":"A list of tools the model may generate the right arguments for."},"tool_results":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","minLength":1,"description":"the id of the `tool_call` used to generate result"},"result":{"type":"string","minLength":1,"description":"the result of your function"}},"required":["id","result"]},"description":"List of results obtained from applying the tool_call arguments to your own tool."},"fallback_type":{"default":"continue","enum":["rerun","continue"],"type":"string","description":"* `rerun` - Rerun\n* `continue` - Continue\n\nDefault: `continue`"}},"required":["providers"],"$schema":"http://json-schema.org/draft-04/schema#"},"response":{"200":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const TextCodeGenerationCreate = {"body":{"type":"object","properties":{"settings":{"type":"string","default":{},"description":"A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     "},"providers":{"type":"array","items":{"type":"string","minLength":1},"description":"It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.<br>             Providers can also be invoked with specific models (ex: providers: **'amazon/model1, amazon/model2, google/model3'**)"},"fallback_providers":{"type":"array","items":{"type":"string"},"default":[],"description":"Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ","maxItems":5},"response_as_dict":{"type":"boolean","default":true,"description":"Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "},"attributes_as_list":{"type":"boolean","default":false,"description":"Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "},"show_base_64":{"type":"boolean","default":true},"show_original_response":{"type":"boolean","default":false,"description":"Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."},"prompt":{"type":["string","null"],"description":"Entrer the source code that will be used as a context."},"instruction":{"type":"string","minLength":1,"description":"Entrer the instruction you want to be followed.","examples":["Write a function in python that calculates fibonacci"]},"temperature":{"type":"number","format":"double","maximum":1,"minimum":0,"default":0,"description":"Higher values mean the model will take more risks and value 0 (argmax sampling) works better for scenarios with a well-defined answer.","examples":[0.1]},"max_tokens":{"type":"integer","minimum":1,"default":1000,"description":"The maximum number of tokens to generate in the completion. The token count of your prompt plus max_tokens cannot exceed the model's context length.","examples":[100]}},"required":["instruction","providers"],"$schema":"http://json-schema.org/draft-04/schema#"},"response":{"200":{"properties":{"google":{"required":["generated_text","status"],"title":"textcode_generationCodeGenerationDataClass","type":"object","properties":{"generated_text":{"title":"Generated Text","type":"string"},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"openai":{"required":["generated_text","status"],"title":"textcode_generationCodeGenerationDataClass","type":"object","properties":{"generated_text":{"title":"Generated Text","type":"string"},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"nlpcloud":{"required":["generated_text","status"],"title":"textcode_generationCodeGenerationDataClass","type":"object","properties":{"generated_text":{"title":"Generated Text","type":"string"},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}}},"title":"textcode_generationResponseModel","type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"object","properties":{"<parameter_name>":{"type":"array","items":{"type":"string"}}},"required":["<parameter_name>"]}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"string"}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"details":{"type":"string","default":"Not Found"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"string"}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const TextCustomClassificationCreate = {"body":{"type":"object","properties":{"settings":{"type":"string","default":{},"description":"A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     "},"providers":{"type":"array","items":{"type":"string","minLength":1},"description":"It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.<br>             Providers can also be invoked with specific models (ex: providers: **'amazon/model1, amazon/model2, google/model3'**)"},"fallback_providers":{"type":"array","items":{"type":"string"},"default":[],"description":"Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ","maxItems":5},"response_as_dict":{"type":"boolean","default":true,"description":"Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "},"attributes_as_list":{"type":"boolean","default":false,"description":"Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "},"show_base_64":{"type":"boolean","default":true},"show_original_response":{"type":"boolean","default":false,"description":"Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."},"texts":{"type":"array","items":{"type":"string","minLength":1,"examples":["Confirm your email address"]},"description":"List of texts to classify"},"labels":{"type":"array","items":{"type":"string","minLength":1,"examples":["spam"]},"description":"List of the labels (classes) you want the texts to be classified as."},"examples":{"type":"array","items":{"type":"array","items":{"type":"string","minLength":1,"examples":["I need help please wire me $1000 right now"]},"maxItems":2,"minItems":2},"description":"List of text/label pairs (eg: [['I need help please wire me $1000 right now', 'spam'],]"}},"required":["examples","labels","providers","texts"],"$schema":"http://json-schema.org/draft-04/schema#"},"response":{"200":{"properties":{"openai":{"required":["status"],"title":"textcustom_classificationCustomClassificationDataClass","type":"object","properties":{"classifications":{"title":"Classifications","type":"array","items":{"required":["input","label","confidence"],"title":"ItemCustomClassificationDataClass","type":"object","properties":{"input":{"title":"Input","type":"string"},"label":{"title":"Label","type":"string"},"confidence":{"title":"Confidence","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"cohere":{"required":["status"],"title":"textcustom_classificationCustomClassificationDataClass","type":"object","properties":{"classifications":{"title":"Classifications","type":"array","items":{"required":["input","label","confidence"],"title":"ItemCustomClassificationDataClass","type":"object","properties":{"input":{"title":"Input","type":"string"},"label":{"title":"Label","type":"string"},"confidence":{"title":"Confidence","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}}},"title":"textcustom_classificationResponseModel","type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"object","properties":{"<parameter_name>":{"type":"array","items":{"type":"string"}}},"required":["<parameter_name>"]}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"string"}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"details":{"type":"string","default":"Not Found"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"string"}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const TextCustomNamedEntityRecognitionCreate = {"body":{"type":"object","properties":{"settings":{"type":"string","default":{},"description":"A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     "},"providers":{"type":"array","items":{"type":"string","minLength":1},"description":"It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.<br>             Providers can also be invoked with specific models (ex: providers: **'amazon/model1, amazon/model2, google/model3'**)"},"fallback_providers":{"type":"array","items":{"type":"string"},"default":[],"description":"Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ","maxItems":5},"response_as_dict":{"type":"boolean","default":true,"description":"Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "},"attributes_as_list":{"type":"boolean","default":false,"description":"Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "},"show_base_64":{"type":"boolean","default":true},"show_original_response":{"type":"boolean","default":false,"description":"Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."},"text":{"type":"string","minLength":1,"description":"Enter your input text.","examples":["Barack Hussein Obama is an American politician who served as the 44th president of the United States from 2009 to 2017. A member of the Democratic Party, Obama was the first African-American president of the United States. He previously served as a U.S. senator from Illinois from 2005 to 2008 and as an Illinois state senator from 1997 to 2004."]},"entities":{"type":"array","items":{"type":"string","minLength":1,"examples":["Politician"]},"description":"List of entities (at least two) to extract from your text eg : ['job', 'country'].","minItems":2},"examples":{"type":"array","items":{"type":"object","additionalProperties":true},"description":"List of examples eg : [{'text': 'an input text', 'entities' : [{'entity':'entity_1', 'category':'category_1'}, ...]}, ...]"}},"required":["entities","providers","text"],"$schema":"http://json-schema.org/draft-04/schema#"},"response":{"200":{"properties":{"openai":{"required":["status"],"title":"textcustom_named_entity_recognitionCustomNamedEntityRecognitionDataClass","type":"object","properties":{"items":{"title":"Items","type":"array","items":{"required":["entity","category"],"title":"InfosCustomNamedEntityRecognitionDataClass","type":"object","properties":{"entity":{"title":"Entity","type":"string"},"category":{"title":"Category","type":"string"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"cohere":{"required":["status"],"title":"textcustom_named_entity_recognitionCustomNamedEntityRecognitionDataClass","type":"object","properties":{"items":{"title":"Items","type":"array","items":{"required":["entity","category"],"title":"InfosCustomNamedEntityRecognitionDataClass","type":"object","properties":{"entity":{"title":"Entity","type":"string"},"category":{"title":"Category","type":"string"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"eden-ai":{"required":["status"],"title":"textcustom_named_entity_recognitionCustomNamedEntityRecognitionDataClass","type":"object","properties":{"items":{"title":"Items","type":"array","items":{"required":["entity","category"],"title":"InfosCustomNamedEntityRecognitionDataClass","type":"object","properties":{"entity":{"title":"Entity","type":"string"},"category":{"title":"Category","type":"string"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}}},"title":"textcustom_named_entity_recognitionResponseModel","type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"object","properties":{"<parameter_name>":{"type":"array","items":{"type":"string"}}},"required":["<parameter_name>"]}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"string"}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"details":{"type":"string","default":"Not Found"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"string"}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const TextEmbeddingsCreate = {"body":{"type":"object","properties":{"settings":{"type":"string","default":{},"description":"A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     "},"providers":{"type":"array","items":{"type":"string","minLength":1},"description":"It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.<br>             Providers can also be invoked with specific models (ex: providers: **'amazon/model1, amazon/model2, google/model3'**)"},"fallback_providers":{"type":"array","items":{"type":"string"},"default":[],"description":"Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ","maxItems":5},"response_as_dict":{"type":"boolean","default":true,"description":"Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "},"attributes_as_list":{"type":"boolean","default":false,"description":"Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "},"show_base_64":{"type":"boolean","default":true},"show_original_response":{"type":"boolean","default":false,"description":"Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."},"texts":{"type":"array","items":{"type":"string","minLength":1,"examples":["Hello world"]},"description":"List of texts to transform into embeddings."}},"required":["providers","texts"],"$schema":"http://json-schema.org/draft-04/schema#"},"response":{"200":{"properties":{"ai21labs":{"required":["status"],"title":"textembeddingsEmbeddingsDataClass","type":"object","properties":{"items":{"title":"Items","type":"array","items":{"required":["embedding"],"title":"EmbeddingDataClass","type":"object","properties":{"embedding":{"title":"Embedding","type":"array","items":{"type":"integer"}}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"mistral":{"required":["status"],"title":"textembeddingsEmbeddingsDataClass","type":"object","properties":{"items":{"title":"Items","type":"array","items":{"required":["embedding"],"title":"EmbeddingDataClass","type":"object","properties":{"embedding":{"title":"Embedding","type":"array","items":{"type":"integer"}}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"jina":{"required":["status"],"title":"textembeddingsEmbeddingsDataClass","type":"object","properties":{"items":{"title":"Items","type":"array","items":{"required":["embedding"],"title":"EmbeddingDataClass","type":"object","properties":{"embedding":{"title":"Embedding","type":"array","items":{"type":"integer"}}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"cohere":{"required":["status"],"title":"textembeddingsEmbeddingsDataClass","type":"object","properties":{"items":{"title":"Items","type":"array","items":{"required":["embedding"],"title":"EmbeddingDataClass","type":"object","properties":{"embedding":{"title":"Embedding","type":"array","items":{"type":"integer"}}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"google":{"required":["status"],"title":"textembeddingsEmbeddingsDataClass","type":"object","properties":{"items":{"title":"Items","type":"array","items":{"required":["embedding"],"title":"EmbeddingDataClass","type":"object","properties":{"embedding":{"title":"Embedding","type":"array","items":{"type":"integer"}}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"openai":{"required":["status"],"title":"textembeddingsEmbeddingsDataClass","type":"object","properties":{"items":{"title":"Items","type":"array","items":{"required":["embedding"],"title":"EmbeddingDataClass","type":"object","properties":{"embedding":{"title":"Embedding","type":"array","items":{"type":"integer"}}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}}},"title":"textembeddingsResponseModel","type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"object","properties":{"<parameter_name>":{"type":"array","items":{"type":"string"}}},"required":["<parameter_name>"]}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"string"}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"details":{"type":"string","default":"Not Found"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"string"}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const TextEmotionDetectionCreate = {"body":{"type":"object","properties":{"settings":{"type":"string","default":{},"description":"A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     "},"providers":{"type":"array","items":{"type":"string","minLength":1},"description":"It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.<br>             Providers can also be invoked with specific models (ex: providers: **'amazon/model1, amazon/model2, google/model3'**)"},"fallback_providers":{"type":"array","items":{"type":"string"},"default":[],"description":"Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ","maxItems":5},"response_as_dict":{"type":"boolean","default":true,"description":"Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "},"attributes_as_list":{"type":"boolean","default":false,"description":"Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "},"show_base_64":{"type":"boolean","default":true},"show_original_response":{"type":"boolean","default":false,"description":"Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."},"text":{"type":"string","minLength":1,"description":"Text to analyze","examples":["I'm scared!"]}},"required":["providers","text"],"$schema":"http://json-schema.org/draft-04/schema#"},"response":{"200":{"properties":{"nlpcloud":{"required":["text","status"],"title":"textemotion_detectionEmotionDetectionDataClass","type":"object","properties":{"text":{"title":"Text","type":"string"},"items":{"title":"Items","type":"array","items":{"description":"This class is used in EmotionAnalysisDataClass to list emotion analysed.\nArgs:\n    - emotion (EmotionEnum): emotion of the text\n    - emotion_score (float): score of the emotion","required":["emotion","emotion_score"],"title":"EmotionItem","type":"object","properties":{"emotion":{"title":"Emotion","type":"string"},"emotion_score":{"maximum":100,"minimum":0,"title":"Emotion Score","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"vernai":{"required":["text","status"],"title":"textemotion_detectionEmotionDetectionDataClass","type":"object","properties":{"text":{"title":"Text","type":"string"},"items":{"title":"Items","type":"array","items":{"description":"This class is used in EmotionAnalysisDataClass to list emotion analysed.\nArgs:\n    - emotion (EmotionEnum): emotion of the text\n    - emotion_score (float): score of the emotion","required":["emotion","emotion_score"],"title":"EmotionItem","type":"object","properties":{"emotion":{"title":"Emotion","type":"string"},"emotion_score":{"maximum":100,"minimum":0,"title":"Emotion Score","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}}},"title":"textemotion_detectionResponseModel","type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"object","properties":{"<parameter_name>":{"type":"array","items":{"type":"string"}}},"required":["<parameter_name>"]}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"string"}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"details":{"type":"string","default":"Not Found"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"string"}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const TextEntitySentimentCreate = {"body":{"type":"object","properties":{"settings":{"type":"string","default":{},"description":"A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     "},"providers":{"type":"array","items":{"type":"string","minLength":1},"description":"It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.<br>             Providers can also be invoked with specific models (ex: providers: **'amazon/model1, amazon/model2, google/model3'**)"},"fallback_providers":{"type":"array","items":{"type":"string"},"default":[],"description":"Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ","maxItems":5},"response_as_dict":{"type":"boolean","default":true,"description":"Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "},"attributes_as_list":{"type":"boolean","default":false,"description":"Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "},"show_base_64":{"type":"boolean","default":true},"show_original_response":{"type":"boolean","default":false,"description":"Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."},"text":{"type":"string","minLength":1,"description":"Text to analyze","examples":["Overall I am satisfied with my experience at Amazon, but two areas of major improvement needed. First is the product reviews and pricing. There are thousands of positive reviews for so many items, and it's clear that the reviews are bogus or not really associated with that product. There needs to be a way to only view products sold by Amazon directly, because many market sellers way overprice items that can be purchased cheaper elsewhere (like Walmart, Target, etc). The second issue is they make it too difficult to get help when there's an issue with an order."]},"language":{"type":["string","null"],"description":"Language code for the language the input text is written in (eg: en, fr).","examples":["en"]}},"required":["providers","text"],"$schema":"http://json-schema.org/draft-04/schema#"},"response":{"200":{"properties":{"google":{"required":["items","status"],"title":"textentity_sentimentEntitySentimentDataClass","type":"object","properties":{"items":{"title":"Items","type":"array","items":{"required":["type","text","sentiment"],"title":"Entity","type":"object","properties":{"type":{"description":"Recognized Entity type","title":"Type","type":"string"},"text":{"description":"Text corresponding to the entity","title":"Text","type":"string"},"sentiment":{"title":"Sentiment","enum":["Positive","Negative","Neutral","Mixed"],"type":"string","description":"`Positive` `Negative` `Neutral` `Mixed`"},"begin_offset":{"default":null,"title":"Begin Offset","type":"integer"},"end_offset":{"default":null,"title":"End Offset","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"amazon":{"required":["items","status"],"title":"textentity_sentimentEntitySentimentDataClass","type":"object","properties":{"items":{"title":"Items","type":"array","items":{"required":["type","text","sentiment"],"title":"Entity","type":"object","properties":{"type":{"description":"Recognized Entity type","title":"Type","type":"string"},"text":{"description":"Text corresponding to the entity","title":"Text","type":"string"},"sentiment":{"title":"Sentiment","enum":["Positive","Negative","Neutral","Mixed"],"type":"string","description":"`Positive` `Negative` `Neutral` `Mixed`"},"begin_offset":{"default":null,"title":"Begin Offset","type":"integer"},"end_offset":{"default":null,"title":"End Offset","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}}},"title":"textentity_sentimentResponseModel","type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"object","properties":{"<parameter_name>":{"type":"array","items":{"type":"string"}}},"required":["<parameter_name>"]}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"string"}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"details":{"type":"string","default":"Not Found"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"string"}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const TextGenerationCreate = {"body":{"type":"object","properties":{"settings":{"type":"string","default":{},"description":"A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     "},"providers":{"type":"array","items":{"type":"string","minLength":1},"description":"It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.<br>             Providers can also be invoked with specific models (ex: providers: **'amazon/model1, amazon/model2, google/model3'**)"},"fallback_providers":{"type":"array","items":{"type":"string"},"default":[],"description":"Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ","maxItems":5},"response_as_dict":{"type":"boolean","default":true,"description":"Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "},"attributes_as_list":{"type":"boolean","default":false,"description":"Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "},"show_base_64":{"type":"boolean","default":true},"show_original_response":{"type":"boolean","default":false,"description":"Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."},"text":{"type":"string","minLength":1,"description":"Enter your prompt","examples":["The following is a conversation with an AI assistant. The assistant is helpful, creative, clever, and very friendly.\n\nHuman: Hello, who are you?"]},"temperature":{"type":"number","format":"double","maximum":1,"minimum":0,"default":0,"description":"Higher values mean the model will take more risks and value 0 (argmax sampling) works better for scenarios with a well-defined answer."},"max_tokens":{"type":"integer","minimum":1,"default":1000,"description":"The maximum number of tokens to generate in the completion. The token count of your prompt plus max_tokens cannot exceed the model's context length.","examples":[10]}},"required":["providers","text"],"$schema":"http://json-schema.org/draft-04/schema#"},"response":{"200":{"properties":{"ai21labs":{"required":["generated_text","status"],"title":"textgenerationGenerationDataClass","type":"object","properties":{"generated_text":{"title":"Generated Text","type":"string"},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"meta":{"required":["generated_text","status"],"title":"textgenerationGenerationDataClass","type":"object","properties":{"generated_text":{"title":"Generated Text","type":"string"},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"anthropic":{"required":["generated_text","status"],"title":"textgenerationGenerationDataClass","type":"object","properties":{"generated_text":{"title":"Generated Text","type":"string"},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"mistral":{"required":["generated_text","status"],"title":"textgenerationGenerationDataClass","type":"object","properties":{"generated_text":{"title":"Generated Text","type":"string"},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"clarifai":{"required":["generated_text","status"],"title":"textgenerationGenerationDataClass","type":"object","properties":{"generated_text":{"title":"Generated Text","type":"string"},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"cohere":{"required":["generated_text","status"],"title":"textgenerationGenerationDataClass","type":"object","properties":{"generated_text":{"title":"Generated Text","type":"string"},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"google":{"required":["generated_text","status"],"title":"textgenerationGenerationDataClass","type":"object","properties":{"generated_text":{"title":"Generated Text","type":"string"},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"openai":{"required":["generated_text","status"],"title":"textgenerationGenerationDataClass","type":"object","properties":{"generated_text":{"title":"Generated Text","type":"string"},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"amazon":{"required":["generated_text","status"],"title":"textgenerationGenerationDataClass","type":"object","properties":{"generated_text":{"title":"Generated Text","type":"string"},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}}},"title":"textgenerationResponseModel","type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"object","properties":{"<parameter_name>":{"type":"array","items":{"type":"string"}}},"required":["<parameter_name>"]}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"string"}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"details":{"type":"string","default":"Not Found"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"string"}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const TextKeywordExtractionCreate = {"body":{"type":"object","properties":{"settings":{"type":"string","default":{},"description":"A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     "},"providers":{"type":"array","items":{"type":"string","minLength":1},"description":"It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.<br>             Providers can also be invoked with specific models (ex: providers: **'amazon/model1, amazon/model2, google/model3'**)"},"fallback_providers":{"type":"array","items":{"type":"string"},"default":[],"description":"Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ","maxItems":5},"response_as_dict":{"type":"boolean","default":true,"description":"Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "},"attributes_as_list":{"type":"boolean","default":false,"description":"Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "},"show_base_64":{"type":"boolean","default":true},"show_original_response":{"type":"boolean","default":false,"description":"Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."},"text":{"type":"string","minLength":1,"description":"Text to analyze","examples":["Barack Hussein Obama is an American politician who served as the 44th president of the United States from 2009 to 2017. A member of the Democratic Party, Obama was the first African-American president of the United States. He previously served as a U.S. senator from Illinois from 2005 to 2008 and as an Illinois state senator from 1997 to 2004."]},"language":{"type":["string","null"],"description":"Language code for the language the input text is written in (eg: en, fr).","examples":["en"]}},"required":["providers","text"],"$schema":"http://json-schema.org/draft-04/schema#"},"response":{"200":{"properties":{"oneai":{"required":["status"],"title":"textkeyword_extractionKeywordExtractionDataClass","type":"object","properties":{"items":{"title":"Items","type":"array","items":{"required":["keyword","importance"],"title":"InfosKeywordExtractionDataClass","type":"object","properties":{"keyword":{"title":"Keyword","type":"string"},"importance":{"title":"Importance","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"emvista":{"required":["status"],"title":"textkeyword_extractionKeywordExtractionDataClass","type":"object","properties":{"items":{"title":"Items","type":"array","items":{"required":["keyword","importance"],"title":"InfosKeywordExtractionDataClass","type":"object","properties":{"keyword":{"title":"Keyword","type":"string"},"importance":{"title":"Importance","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"microsoft":{"required":["status"],"title":"textkeyword_extractionKeywordExtractionDataClass","type":"object","properties":{"items":{"title":"Items","type":"array","items":{"required":["keyword","importance"],"title":"InfosKeywordExtractionDataClass","type":"object","properties":{"keyword":{"title":"Keyword","type":"string"},"importance":{"title":"Importance","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"ibm":{"required":["status"],"title":"textkeyword_extractionKeywordExtractionDataClass","type":"object","properties":{"items":{"title":"Items","type":"array","items":{"required":["keyword","importance"],"title":"InfosKeywordExtractionDataClass","type":"object","properties":{"keyword":{"title":"Keyword","type":"string"},"importance":{"title":"Importance","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"nlpcloud":{"required":["status"],"title":"textkeyword_extractionKeywordExtractionDataClass","type":"object","properties":{"items":{"title":"Items","type":"array","items":{"required":["keyword","importance"],"title":"InfosKeywordExtractionDataClass","type":"object","properties":{"keyword":{"title":"Keyword","type":"string"},"importance":{"title":"Importance","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"corticalio":{"required":["status"],"title":"textkeyword_extractionKeywordExtractionDataClass","type":"object","properties":{"items":{"title":"Items","type":"array","items":{"required":["keyword","importance"],"title":"InfosKeywordExtractionDataClass","type":"object","properties":{"keyword":{"title":"Keyword","type":"string"},"importance":{"title":"Importance","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"openai":{"required":["status"],"title":"textkeyword_extractionKeywordExtractionDataClass","type":"object","properties":{"items":{"title":"Items","type":"array","items":{"required":["keyword","importance"],"title":"InfosKeywordExtractionDataClass","type":"object","properties":{"keyword":{"title":"Keyword","type":"string"},"importance":{"title":"Importance","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"tenstorrent":{"required":["status"],"title":"textkeyword_extractionKeywordExtractionDataClass","type":"object","properties":{"items":{"title":"Items","type":"array","items":{"required":["keyword","importance"],"title":"InfosKeywordExtractionDataClass","type":"object","properties":{"keyword":{"title":"Keyword","type":"string"},"importance":{"title":"Importance","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"amazon":{"required":["status"],"title":"textkeyword_extractionKeywordExtractionDataClass","type":"object","properties":{"items":{"title":"Items","type":"array","items":{"required":["keyword","importance"],"title":"InfosKeywordExtractionDataClass","type":"object","properties":{"keyword":{"title":"Keyword","type":"string"},"importance":{"title":"Importance","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"eden-ai":{"required":["status"],"title":"textkeyword_extractionKeywordExtractionDataClass","type":"object","properties":{"items":{"title":"Items","type":"array","items":{"required":["keyword","importance"],"title":"InfosKeywordExtractionDataClass","type":"object","properties":{"keyword":{"title":"Keyword","type":"string"},"importance":{"title":"Importance","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}}},"title":"textkeyword_extractionResponseModel","type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"object","properties":{"<parameter_name>":{"type":"array","items":{"type":"string"}}},"required":["<parameter_name>"]}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"string"}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"details":{"type":"string","default":"Not Found"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"string"}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const TextModerationCreate = {"body":{"type":"object","properties":{"settings":{"type":"string","default":{},"description":"A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     "},"providers":{"type":"array","items":{"type":"string","minLength":1},"description":"It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.<br>             Providers can also be invoked with specific models (ex: providers: **'amazon/model1, amazon/model2, google/model3'**)"},"fallback_providers":{"type":"array","items":{"type":"string"},"default":[],"description":"Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ","maxItems":5},"response_as_dict":{"type":"boolean","default":true,"description":"Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "},"attributes_as_list":{"type":"boolean","default":false,"description":"Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "},"show_base_64":{"type":"boolean","default":true},"show_original_response":{"type":"boolean","default":false,"description":"Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."},"text":{"type":"string","minLength":1,"description":"Text to analyze","examples":["Is this a crap email abcdef@abcd.com, phone: 0617730730, IP: 255.255.255.255, 1 Microsoft Way, Redmond, WA 98052"]},"language":{"type":["string","null"],"description":"Language code for the language the input text is written in (eg: en, fr).","examples":["en"]}},"required":["providers","text"],"$schema":"http://json-schema.org/draft-04/schema#"},"response":{"200":{"properties":{"microsoft":{"required":["nsfw_likelihood","nsfw_likelihood_score","status"],"title":"textmoderationModerationDataClass","type":"object","properties":{"nsfw_likelihood":{"title":"Nsfw Likelihood","type":"integer"},"items":{"title":"Items","type":"array","items":{"required":["label","likelihood","category","subcategory","likelihood_score"],"title":"TextModerationItem","type":"object","properties":{"label":{"title":"Label","type":"string"},"likelihood":{"title":"Likelihood","type":"integer"},"category":{"description":"This enum are used to categorize the entities extracted from the text.\n\n`PersonalInformation` `FinancialInformation` `IdentificationNumbers` `Miscellaneous` `OrganizationInformation` `DateAndTime` `LocationInformation` `Other`","enum":["PersonalInformation","FinancialInformation","IdentificationNumbers","Miscellaneous","OrganizationInformation","DateAndTime","LocationInformation","Other"],"title":"CategoryType","type":"string"},"subcategory":{"anyOf":[{"enum":["Insult","Obscene","Derogatory","Profanity","Threat","Toxic"],"title":"ToxicSubCategoryType","type":"string","description":"`Insult` `Obscene` `Derogatory` `Profanity` `Threat` `Toxic`"},{"enum":["MiddleFinger","PublicSafety","Health","Explicit","QRCode","Medical","Politics","Legal"],"title":"ContentSubCategoryType","type":"string","description":"`MiddleFinger` `PublicSafety` `Health` `Explicit` `QRCode` `Medical` `Politics` `Legal`"},{"enum":["SexualActivity","SexualSituations","Nudity","PartialNudity","Suggestive","AdultToys","RevealingClothes","Sexual"],"title":"SexualSubCategoryType","type":"string","description":"`SexualActivity` `SexualSituations` `Nudity` `PartialNudity` `Suggestive` `AdultToys` `RevealingClothes` `Sexual`"},{"enum":["GraphicViolenceOrGore","PhysicalViolence","WeaponViolence","Violence"],"title":"ViolenceSubCategoryType","type":"string","description":"`GraphicViolenceOrGore` `PhysicalViolence` `WeaponViolence` `Violence`"},{"enum":["DrugProducts","DrugUse","Tobacco","Smoking","Alcohol","Drinking"],"title":"DrugAndAlcoholSubCategoryType","type":"string","description":"`DrugProducts` `DrugUse` `Tobacco` `Smoking` `Alcohol` `Drinking`"},{"enum":["Gambling","Finance","MoneyContent"],"title":"FinanceSubCategoryType","type":"string","description":"`Gambling` `Finance` `MoneyContent`"},{"enum":["Hate","Harassment","Threatening","Extremist","Racy"],"title":"HateAndExtremismSubCategoryType","type":"string","description":"`Hate` `Harassment` `Threatening` `Extremist` `Racy`"},{"enum":["Safe","NotSafe"],"title":"SafeSubCategoryType","type":"string","description":"`Safe` `NotSafe`"},{"enum":["Other","Anonymized","Nerd","Wsd","Unknown"],"title":"OtherSubCategoryType","type":"string","description":"`Other` `Anonymized` `Nerd` `Wsd` `Unknown`"}],"title":"Subcategory"},"likelihood_score":{"title":"Likelihood Score","type":"integer"}}}},"nsfw_likelihood_score":{"title":"Nsfw Likelihood Score","type":"integer"},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"google":{"required":["nsfw_likelihood","nsfw_likelihood_score","status"],"title":"textmoderationModerationDataClass","type":"object","properties":{"nsfw_likelihood":{"title":"Nsfw Likelihood","type":"integer"},"items":{"title":"Items","type":"array","items":{"required":["label","likelihood","category","subcategory","likelihood_score"],"title":"TextModerationItem","type":"object","properties":{"label":{"title":"Label","type":"string"},"likelihood":{"title":"Likelihood","type":"integer"},"category":{"description":"This enum are used to categorize the entities extracted from the text.\n\n`PersonalInformation` `FinancialInformation` `IdentificationNumbers` `Miscellaneous` `OrganizationInformation` `DateAndTime` `LocationInformation` `Other`","enum":["PersonalInformation","FinancialInformation","IdentificationNumbers","Miscellaneous","OrganizationInformation","DateAndTime","LocationInformation","Other"],"title":"CategoryType","type":"string"},"subcategory":{"anyOf":[{"enum":["Insult","Obscene","Derogatory","Profanity","Threat","Toxic"],"title":"ToxicSubCategoryType","type":"string","description":"`Insult` `Obscene` `Derogatory` `Profanity` `Threat` `Toxic`"},{"enum":["MiddleFinger","PublicSafety","Health","Explicit","QRCode","Medical","Politics","Legal"],"title":"ContentSubCategoryType","type":"string","description":"`MiddleFinger` `PublicSafety` `Health` `Explicit` `QRCode` `Medical` `Politics` `Legal`"},{"enum":["SexualActivity","SexualSituations","Nudity","PartialNudity","Suggestive","AdultToys","RevealingClothes","Sexual"],"title":"SexualSubCategoryType","type":"string","description":"`SexualActivity` `SexualSituations` `Nudity` `PartialNudity` `Suggestive` `AdultToys` `RevealingClothes` `Sexual`"},{"enum":["GraphicViolenceOrGore","PhysicalViolence","WeaponViolence","Violence"],"title":"ViolenceSubCategoryType","type":"string","description":"`GraphicViolenceOrGore` `PhysicalViolence` `WeaponViolence` `Violence`"},{"enum":["DrugProducts","DrugUse","Tobacco","Smoking","Alcohol","Drinking"],"title":"DrugAndAlcoholSubCategoryType","type":"string","description":"`DrugProducts` `DrugUse` `Tobacco` `Smoking` `Alcohol` `Drinking`"},{"enum":["Gambling","Finance","MoneyContent"],"title":"FinanceSubCategoryType","type":"string","description":"`Gambling` `Finance` `MoneyContent`"},{"enum":["Hate","Harassment","Threatening","Extremist","Racy"],"title":"HateAndExtremismSubCategoryType","type":"string","description":"`Hate` `Harassment` `Threatening` `Extremist` `Racy`"},{"enum":["Safe","NotSafe"],"title":"SafeSubCategoryType","type":"string","description":"`Safe` `NotSafe`"},{"enum":["Other","Anonymized","Nerd","Wsd","Unknown"],"title":"OtherSubCategoryType","type":"string","description":"`Other` `Anonymized` `Nerd` `Wsd` `Unknown`"}],"title":"Subcategory"},"likelihood_score":{"title":"Likelihood Score","type":"integer"}}}},"nsfw_likelihood_score":{"title":"Nsfw Likelihood Score","type":"integer"},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"clarifai":{"required":["nsfw_likelihood","nsfw_likelihood_score","status"],"title":"textmoderationModerationDataClass","type":"object","properties":{"nsfw_likelihood":{"title":"Nsfw Likelihood","type":"integer"},"items":{"title":"Items","type":"array","items":{"required":["label","likelihood","category","subcategory","likelihood_score"],"title":"TextModerationItem","type":"object","properties":{"label":{"title":"Label","type":"string"},"likelihood":{"title":"Likelihood","type":"integer"},"category":{"description":"This enum are used to categorize the entities extracted from the text.\n\n`PersonalInformation` `FinancialInformation` `IdentificationNumbers` `Miscellaneous` `OrganizationInformation` `DateAndTime` `LocationInformation` `Other`","enum":["PersonalInformation","FinancialInformation","IdentificationNumbers","Miscellaneous","OrganizationInformation","DateAndTime","LocationInformation","Other"],"title":"CategoryType","type":"string"},"subcategory":{"anyOf":[{"enum":["Insult","Obscene","Derogatory","Profanity","Threat","Toxic"],"title":"ToxicSubCategoryType","type":"string","description":"`Insult` `Obscene` `Derogatory` `Profanity` `Threat` `Toxic`"},{"enum":["MiddleFinger","PublicSafety","Health","Explicit","QRCode","Medical","Politics","Legal"],"title":"ContentSubCategoryType","type":"string","description":"`MiddleFinger` `PublicSafety` `Health` `Explicit` `QRCode` `Medical` `Politics` `Legal`"},{"enum":["SexualActivity","SexualSituations","Nudity","PartialNudity","Suggestive","AdultToys","RevealingClothes","Sexual"],"title":"SexualSubCategoryType","type":"string","description":"`SexualActivity` `SexualSituations` `Nudity` `PartialNudity` `Suggestive` `AdultToys` `RevealingClothes` `Sexual`"},{"enum":["GraphicViolenceOrGore","PhysicalViolence","WeaponViolence","Violence"],"title":"ViolenceSubCategoryType","type":"string","description":"`GraphicViolenceOrGore` `PhysicalViolence` `WeaponViolence` `Violence`"},{"enum":["DrugProducts","DrugUse","Tobacco","Smoking","Alcohol","Drinking"],"title":"DrugAndAlcoholSubCategoryType","type":"string","description":"`DrugProducts` `DrugUse` `Tobacco` `Smoking` `Alcohol` `Drinking`"},{"enum":["Gambling","Finance","MoneyContent"],"title":"FinanceSubCategoryType","type":"string","description":"`Gambling` `Finance` `MoneyContent`"},{"enum":["Hate","Harassment","Threatening","Extremist","Racy"],"title":"HateAndExtremismSubCategoryType","type":"string","description":"`Hate` `Harassment` `Threatening` `Extremist` `Racy`"},{"enum":["Safe","NotSafe"],"title":"SafeSubCategoryType","type":"string","description":"`Safe` `NotSafe`"},{"enum":["Other","Anonymized","Nerd","Wsd","Unknown"],"title":"OtherSubCategoryType","type":"string","description":"`Other` `Anonymized` `Nerd` `Wsd` `Unknown`"}],"title":"Subcategory"},"likelihood_score":{"title":"Likelihood Score","type":"integer"}}}},"nsfw_likelihood_score":{"title":"Nsfw Likelihood Score","type":"integer"},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"openai":{"required":["nsfw_likelihood","nsfw_likelihood_score","status"],"title":"textmoderationModerationDataClass","type":"object","properties":{"nsfw_likelihood":{"title":"Nsfw Likelihood","type":"integer"},"items":{"title":"Items","type":"array","items":{"required":["label","likelihood","category","subcategory","likelihood_score"],"title":"TextModerationItem","type":"object","properties":{"label":{"title":"Label","type":"string"},"likelihood":{"title":"Likelihood","type":"integer"},"category":{"description":"This enum are used to categorize the entities extracted from the text.\n\n`PersonalInformation` `FinancialInformation` `IdentificationNumbers` `Miscellaneous` `OrganizationInformation` `DateAndTime` `LocationInformation` `Other`","enum":["PersonalInformation","FinancialInformation","IdentificationNumbers","Miscellaneous","OrganizationInformation","DateAndTime","LocationInformation","Other"],"title":"CategoryType","type":"string"},"subcategory":{"anyOf":[{"enum":["Insult","Obscene","Derogatory","Profanity","Threat","Toxic"],"title":"ToxicSubCategoryType","type":"string","description":"`Insult` `Obscene` `Derogatory` `Profanity` `Threat` `Toxic`"},{"enum":["MiddleFinger","PublicSafety","Health","Explicit","QRCode","Medical","Politics","Legal"],"title":"ContentSubCategoryType","type":"string","description":"`MiddleFinger` `PublicSafety` `Health` `Explicit` `QRCode` `Medical` `Politics` `Legal`"},{"enum":["SexualActivity","SexualSituations","Nudity","PartialNudity","Suggestive","AdultToys","RevealingClothes","Sexual"],"title":"SexualSubCategoryType","type":"string","description":"`SexualActivity` `SexualSituations` `Nudity` `PartialNudity` `Suggestive` `AdultToys` `RevealingClothes` `Sexual`"},{"enum":["GraphicViolenceOrGore","PhysicalViolence","WeaponViolence","Violence"],"title":"ViolenceSubCategoryType","type":"string","description":"`GraphicViolenceOrGore` `PhysicalViolence` `WeaponViolence` `Violence`"},{"enum":["DrugProducts","DrugUse","Tobacco","Smoking","Alcohol","Drinking"],"title":"DrugAndAlcoholSubCategoryType","type":"string","description":"`DrugProducts` `DrugUse` `Tobacco` `Smoking` `Alcohol` `Drinking`"},{"enum":["Gambling","Finance","MoneyContent"],"title":"FinanceSubCategoryType","type":"string","description":"`Gambling` `Finance` `MoneyContent`"},{"enum":["Hate","Harassment","Threatening","Extremist","Racy"],"title":"HateAndExtremismSubCategoryType","type":"string","description":"`Hate` `Harassment` `Threatening` `Extremist` `Racy`"},{"enum":["Safe","NotSafe"],"title":"SafeSubCategoryType","type":"string","description":"`Safe` `NotSafe`"},{"enum":["Other","Anonymized","Nerd","Wsd","Unknown"],"title":"OtherSubCategoryType","type":"string","description":"`Other` `Anonymized` `Nerd` `Wsd` `Unknown`"}],"title":"Subcategory"},"likelihood_score":{"title":"Likelihood Score","type":"integer"}}}},"nsfw_likelihood_score":{"title":"Nsfw Likelihood Score","type":"integer"},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}}},"title":"textmoderationResponseModel","type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"object","properties":{"<parameter_name>":{"type":"array","items":{"type":"string"}}},"required":["<parameter_name>"]}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"string"}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"details":{"type":"string","default":"Not Found"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"string"}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const TextNamedEntityRecognitionCreate = {"body":{"type":"object","properties":{"settings":{"type":"string","default":{},"description":"A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     "},"providers":{"type":"array","items":{"type":"string","minLength":1},"description":"It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.<br>             Providers can also be invoked with specific models (ex: providers: **'amazon/model1, amazon/model2, google/model3'**)"},"fallback_providers":{"type":"array","items":{"type":"string"},"default":[],"description":"Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ","maxItems":5},"response_as_dict":{"type":"boolean","default":true,"description":"Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "},"attributes_as_list":{"type":"boolean","default":false,"description":"Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "},"show_base_64":{"type":"boolean","default":true},"show_original_response":{"type":"boolean","default":false,"description":"Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."},"text":{"type":"string","minLength":1,"description":"Text to analyze","examples":["Barack Hussein Obama is an American politician who served as the 44th president of the United States from 2009 to 2017. A member of the Democratic Party, Obama was the first African-American president of the United States. He previously served as a U.S. senator from Illinois from 2005 to 2008 and as an Illinois state senator from 1997 to 2004."]},"language":{"type":["string","null"],"description":"Language code for the language the input text is written in (eg: en, fr).","examples":["en"]}},"required":["providers","text"],"$schema":"http://json-schema.org/draft-04/schema#"},"response":{"200":{"properties":{"oneai":{"required":["status"],"title":"textnamed_entity_recognitionNamedEntityRecognitionDataClass","type":"object","properties":{"items":{"title":"Items","type":"array","items":{"required":["entity","category","importance"],"title":"InfosNamedEntityRecognitionDataClass","type":"object","properties":{"entity":{"title":"Entity","type":"string"},"category":{"title":"Category","type":"string"},"importance":{"title":"Importance","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"lettria":{"required":["status"],"title":"textnamed_entity_recognitionNamedEntityRecognitionDataClass","type":"object","properties":{"items":{"title":"Items","type":"array","items":{"required":["entity","category","importance"],"title":"InfosNamedEntityRecognitionDataClass","type":"object","properties":{"entity":{"title":"Entity","type":"string"},"category":{"title":"Category","type":"string"},"importance":{"title":"Importance","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"microsoft":{"required":["status"],"title":"textnamed_entity_recognitionNamedEntityRecognitionDataClass","type":"object","properties":{"items":{"title":"Items","type":"array","items":{"required":["entity","category","importance"],"title":"InfosNamedEntityRecognitionDataClass","type":"object","properties":{"entity":{"title":"Entity","type":"string"},"category":{"title":"Category","type":"string"},"importance":{"title":"Importance","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"ibm":{"required":["status"],"title":"textnamed_entity_recognitionNamedEntityRecognitionDataClass","type":"object","properties":{"items":{"title":"Items","type":"array","items":{"required":["entity","category","importance"],"title":"InfosNamedEntityRecognitionDataClass","type":"object","properties":{"entity":{"title":"Entity","type":"string"},"category":{"title":"Category","type":"string"},"importance":{"title":"Importance","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"nlpcloud":{"required":["status"],"title":"textnamed_entity_recognitionNamedEntityRecognitionDataClass","type":"object","properties":{"items":{"title":"Items","type":"array","items":{"required":["entity","category","importance"],"title":"InfosNamedEntityRecognitionDataClass","type":"object","properties":{"entity":{"title":"Entity","type":"string"},"category":{"title":"Category","type":"string"},"importance":{"title":"Importance","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"google":{"required":["status"],"title":"textnamed_entity_recognitionNamedEntityRecognitionDataClass","type":"object","properties":{"items":{"title":"Items","type":"array","items":{"required":["entity","category","importance"],"title":"InfosNamedEntityRecognitionDataClass","type":"object","properties":{"entity":{"title":"Entity","type":"string"},"category":{"title":"Category","type":"string"},"importance":{"title":"Importance","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"openai":{"required":["status"],"title":"textnamed_entity_recognitionNamedEntityRecognitionDataClass","type":"object","properties":{"items":{"title":"Items","type":"array","items":{"required":["entity","category","importance"],"title":"InfosNamedEntityRecognitionDataClass","type":"object","properties":{"entity":{"title":"Entity","type":"string"},"category":{"title":"Category","type":"string"},"importance":{"title":"Importance","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"neuralspace":{"required":["status"],"title":"textnamed_entity_recognitionNamedEntityRecognitionDataClass","type":"object","properties":{"items":{"title":"Items","type":"array","items":{"required":["entity","category","importance"],"title":"InfosNamedEntityRecognitionDataClass","type":"object","properties":{"entity":{"title":"Entity","type":"string"},"category":{"title":"Category","type":"string"},"importance":{"title":"Importance","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"tenstorrent":{"required":["status"],"title":"textnamed_entity_recognitionNamedEntityRecognitionDataClass","type":"object","properties":{"items":{"title":"Items","type":"array","items":{"required":["entity","category","importance"],"title":"InfosNamedEntityRecognitionDataClass","type":"object","properties":{"entity":{"title":"Entity","type":"string"},"category":{"title":"Category","type":"string"},"importance":{"title":"Importance","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"amazon":{"required":["status"],"title":"textnamed_entity_recognitionNamedEntityRecognitionDataClass","type":"object","properties":{"items":{"title":"Items","type":"array","items":{"required":["entity","category","importance"],"title":"InfosNamedEntityRecognitionDataClass","type":"object","properties":{"entity":{"title":"Entity","type":"string"},"category":{"title":"Category","type":"string"},"importance":{"title":"Importance","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"eden-ai":{"required":["status"],"title":"textnamed_entity_recognitionNamedEntityRecognitionDataClass","type":"object","properties":{"items":{"title":"Items","type":"array","items":{"required":["entity","category","importance"],"title":"InfosNamedEntityRecognitionDataClass","type":"object","properties":{"entity":{"title":"Entity","type":"string"},"category":{"title":"Category","type":"string"},"importance":{"title":"Importance","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}}},"title":"textnamed_entity_recognitionResponseModel","type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"object","properties":{"<parameter_name>":{"type":"array","items":{"type":"string"}}},"required":["<parameter_name>"]}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"string"}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"details":{"type":"string","default":"Not Found"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"string"}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const TextPlagiaDetectionCreate = {"body":{"type":"object","properties":{"settings":{"type":"string","default":{},"description":"A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     "},"providers":{"type":"array","items":{"type":"string","minLength":1},"description":"It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.<br>             Providers can also be invoked with specific models (ex: providers: **'amazon/model1, amazon/model2, google/model3'**)"},"fallback_providers":{"type":"array","items":{"type":"string"},"default":[],"description":"Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ","maxItems":5},"response_as_dict":{"type":"boolean","default":true,"description":"Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "},"attributes_as_list":{"type":"boolean","default":false,"description":"Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "},"show_base_64":{"type":"boolean","default":true},"show_original_response":{"type":"boolean","default":false,"description":"Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."},"text":{"type":"string","minLength":1,"description":"A text content on which a plagiarism detection analysis will be run","examples":["The Galaxy S23 launch may be far behind us, but Samsung likely has plenty more to announce in 2023.             That's if history repeats itself. Should Samsung stick to its annual routine, we can expect to see new             foldable phones and wearable devices in August. The company also previewed new designs for bendable phones and tablets             earlier this year, hinting that the company may be planning to expand beyond the Z Fold and Z Flip in the near future.             Though Samsung regularly releases new products across many categories, including TVs, home appliances and monitors,             I'm most interested in where its mobile devices are headed. Samsung is one of the world's largest smartphone manufacturers             by market share, meaning it has more influence than most other tech companies on the devices we carry in our pockets each day.             Wearables have also become a large part of how Samsung intends to differentiate its phones from those of other Android device makers.             It's a strategy to create a web of products that keep people hooked, much like Apple's range of devices."]},"title":{"type":["string","null"],"description":"Content title","examples":["n'importe nawak"]}},"required":["providers","text"],"$schema":"http://json-schema.org/draft-04/schema#"},"response":{"200":{"properties":{"winstonai":{"required":["plagia_score","status"],"title":"textplagia_detectionPlagiaDetectionDataClass","type":"object","properties":{"plagia_score":{"title":"Plagia Score","type":"integer"},"items":{"title":"Items","type":"array","items":{"required":["text"],"title":"PlagiaDetectionItem","type":"object","properties":{"text":{"title":"Text","type":"string"},"candidates":{"title":"Candidates","type":"array","items":{"required":["url","plagia_score","prediction","plagiarized_text"],"title":"PlagiaDetectionCandidate","type":"object","properties":{"url":{"title":"Url","type":"string"},"plagia_score":{"title":"Plagia Score","type":"integer"},"prediction":{"title":"Prediction","type":"string"},"plagiarized_text":{"title":"Plagiarized Text","type":"string"}}}}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"originalityai":{"required":["plagia_score","status"],"title":"textplagia_detectionPlagiaDetectionDataClass","type":"object","properties":{"plagia_score":{"title":"Plagia Score","type":"integer"},"items":{"title":"Items","type":"array","items":{"required":["text"],"title":"PlagiaDetectionItem","type":"object","properties":{"text":{"title":"Text","type":"string"},"candidates":{"title":"Candidates","type":"array","items":{"required":["url","plagia_score","prediction","plagiarized_text"],"title":"PlagiaDetectionCandidate","type":"object","properties":{"url":{"title":"Url","type":"string"},"plagia_score":{"title":"Plagia Score","type":"integer"},"prediction":{"title":"Prediction","type":"string"},"plagiarized_text":{"title":"Plagiarized Text","type":"string"}}}}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}}},"title":"textplagia_detectionResponseModel","type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"object","properties":{"<parameter_name>":{"type":"array","items":{"type":"string"}}},"required":["<parameter_name>"]}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"string"}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"details":{"type":"string","default":"Not Found"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"string"}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const TextPromptOptimizationCreate = {"body":{"type":"object","properties":{"settings":{"type":"string","default":{},"description":"A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     "},"providers":{"type":"array","items":{"type":"string","minLength":1},"description":"It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.<br>             Providers can also be invoked with specific models (ex: providers: **'amazon/model1, amazon/model2, google/model3'**)"},"fallback_providers":{"type":"array","items":{"type":"string"},"default":[],"description":"Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ","maxItems":5},"response_as_dict":{"type":"boolean","default":true,"description":"Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "},"attributes_as_list":{"type":"boolean","default":false,"description":"Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "},"show_base_64":{"type":"boolean","default":true},"show_original_response":{"type":"boolean","default":false,"description":"Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."},"text":{"type":"string","minLength":1,"description":"Description of the desired prompt.","examples":["Entity extractor, i give you an entity or multiple entities and a text and i want the entitites extracted from the text"]},"target_provider":{"type":"string","minLength":1,"description":"Select the provider for the prompt optimization","examples":["google"]}},"required":["providers","target_provider","text"],"$schema":"http://json-schema.org/draft-04/schema#"},"response":{"200":{"properties":{"openai":{"required":["missing_information","status"],"title":"textprompt_optimizationPromptOptimizationDataClass","type":"object","properties":{"missing_information":{"title":"Missing Information","type":"string"},"items":{"title":"Items","type":"array","items":{"required":["text"],"title":"PromptDataClass","type":"object","properties":{"text":{"title":"Text","type":"string"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}}},"title":"textprompt_optimizationResponseModel","type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"object","properties":{"<parameter_name>":{"type":"array","items":{"type":"string"}}},"required":["<parameter_name>"]}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"string"}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"details":{"type":"string","default":"Not Found"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"string"}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const TextQuestionAnswerCreate = {"body":{"type":"object","properties":{"settings":{"type":"string","default":{},"description":"A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     "},"providers":{"type":"array","items":{"type":"string","minLength":1},"description":"It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.<br>             Providers can also be invoked with specific models (ex: providers: **'amazon/model1, amazon/model2, google/model3'**)"},"fallback_providers":{"type":"array","items":{"type":"string"},"default":[],"description":"Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ","maxItems":5},"response_as_dict":{"type":"boolean","default":true,"description":"Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "},"attributes_as_list":{"type":"boolean","default":false,"description":"Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "},"show_base_64":{"type":"boolean","default":true},"show_original_response":{"type":"boolean","default":false,"description":"Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."},"texts":{"type":"array","items":{"type":"string","minLength":1,"examples":["The bar-shouldered dove (Geopelia humeralis) is a species of dove, in the family Columbidae, native to Australia and southern New Guinea. Its typical habitat consists of areas of thick vegetation where water is present, damp gullies, forests and gorges, mangroves, plantations, swamps, eucalyptus woodland, tropical and sub-tropical shrubland, and river margins. It can be found in both inland and coastal regions."]},"description":"List of texts to analyze"},"question":{"type":"string","minLength":1,"description":"Question about the text content","examples":["What is the scientific name of bar-shouldered dove?"]},"temperature":{"type":"number","format":"double","maximum":1,"minimum":0,"default":0,"description":"Higher values mean the model will take more risks and value 0 (argmax sampling) works better for scenarios with a well-defined answer."},"examples_context":{"type":"string","minLength":1,"description":"example text serving as context","examples":["In 2017, U.S. life expectancy was 78.6 years."]},"examples":{"type":"array","items":{"type":"array","items":{"type":"string","minLength":1,"examples":["What is human life expectancy in the United States?"]},"maxItems":2,"minItems":2},"description":"List of question/answer pairs (eg: [['When was Barack Obama elected president?', 'in 2009.'],]"}},"required":["examples","examples_context","providers","question","texts"],"$schema":"http://json-schema.org/draft-04/schema#"},"response":{"200":{"properties":{"tenstorrent":{"required":["status"],"title":"textquestion_answerQuestionAnswerDataClass","type":"object","properties":{"answers":{"title":"Answers","type":"array","items":{"type":"string"}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"openai":{"required":["status"],"title":"textquestion_answerQuestionAnswerDataClass","type":"object","properties":{"answers":{"title":"Answers","type":"array","items":{"type":"string"}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"eden-ai":{"required":["status"],"title":"textquestion_answerQuestionAnswerDataClass","type":"object","properties":{"answers":{"title":"Answers","type":"array","items":{"type":"string"}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}}},"title":"textquestion_answerResponseModel","type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"object","properties":{"<parameter_name>":{"type":"array","items":{"type":"string"}}},"required":["<parameter_name>"]}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"string"}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"details":{"type":"string","default":"Not Found"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"string"}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const TextSearchCreate = {"body":{"type":"object","properties":{"settings":{"type":"string","default":{},"description":"A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     "},"providers":{"type":"array","items":{"type":"string","minLength":1},"description":"It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.<br>             Providers can also be invoked with specific models (ex: providers: **'amazon/model1, amazon/model2, google/model3'**)"},"fallback_providers":{"type":"array","items":{"type":"string"},"default":[],"description":"Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ","maxItems":5},"response_as_dict":{"type":"boolean","default":true,"description":"Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "},"attributes_as_list":{"type":"boolean","default":false,"description":"Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "},"show_base_64":{"type":"boolean","default":true},"show_original_response":{"type":"boolean","default":false,"description":"Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."},"texts":{"type":"array","items":{"type":"string","minLength":1,"examples":["In Roman mythology, Romulus and Remus (Latin: [ˈroːmʊlʊs], [ˈrɛmʊs]) are twin brothers whose story tells of the events that led to the founding of the city of Rome and the Roman Kingdom by Romulus."]},"description":"A list of texts to search in.","minItems":2},"query":{"type":"string","minLength":1,"description":"Your text query.","examples":["Rome"]},"similarity_metric":{"default":"cosine","description":"* `cosine` - cosine\n* `manhattan` - manhattan\n* `euclidean` - euclidean\n\nDefault: `cosine`","enum":["cosine","manhattan","euclidean"],"type":"string"}},"required":["providers","query","texts"],"$schema":"http://json-schema.org/draft-04/schema#"},"response":{"200":{"properties":{"google":{"required":["status"],"title":"textsearchSearchDataClass","type":"object","properties":{"items":{"title":"Items","type":"array","items":{"required":["object","document","score"],"title":"InfosSearchDataClass","type":"object","properties":{"object":{"title":"Object","type":"string"},"document":{"title":"Document","type":"integer"},"score":{"title":"Score","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"openai":{"required":["status"],"title":"textsearchSearchDataClass","type":"object","properties":{"items":{"title":"Items","type":"array","items":{"required":["object","document","score"],"title":"InfosSearchDataClass","type":"object","properties":{"object":{"title":"Object","type":"string"},"document":{"title":"Document","type":"integer"},"score":{"title":"Score","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"cohere":{"required":["status"],"title":"textsearchSearchDataClass","type":"object","properties":{"items":{"title":"Items","type":"array","items":{"required":["object","document","score"],"title":"InfosSearchDataClass","type":"object","properties":{"object":{"title":"Object","type":"string"},"document":{"title":"Document","type":"integer"},"score":{"title":"Score","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}}},"title":"textsearchResponseModel","type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"object","properties":{"<parameter_name>":{"type":"array","items":{"type":"string"}}},"required":["<parameter_name>"]}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"string"}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"details":{"type":"string","default":"Not Found"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"string"}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const TextSentimentAnalysisCreate = {"body":{"type":"object","properties":{"settings":{"type":"string","default":{},"description":"A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     "},"providers":{"type":"array","items":{"type":"string","minLength":1},"description":"It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.<br>             Providers can also be invoked with specific models (ex: providers: **'amazon/model1, amazon/model2, google/model3'**)"},"fallback_providers":{"type":"array","items":{"type":"string"},"default":[],"description":"Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ","maxItems":5},"response_as_dict":{"type":"boolean","default":true,"description":"Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "},"attributes_as_list":{"type":"boolean","default":false,"description":"Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "},"show_base_64":{"type":"boolean","default":true},"show_original_response":{"type":"boolean","default":false,"description":"Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."},"text":{"type":"string","minLength":1,"description":"Text to analyze","examples":["Overall I am satisfied with my experience at Amazon, but two areas of major improvement needed. First is the product reviews and pricing. There are thousands of positive reviews for so many items, and it's clear that the reviews are bogus or not really associated with that product. There needs to be a way to only view products sold by Amazon directly, because many market sellers way overprice items that can be purchased cheaper elsewhere (like Walmart, Target, etc). The second issue is they make it too difficult to get help when there's an issue with an order."]},"language":{"type":["string","null"],"description":"Language code for the language the input text is written in (eg: en, fr).","examples":["en"]}},"required":["providers","text"],"$schema":"http://json-schema.org/draft-04/schema#"},"response":{"200":{"properties":{"oneai":{"required":["general_sentiment","general_sentiment_rate","status"],"title":"textsentiment_analysisSentimentAnalysisDataClass","type":"object","properties":{"general_sentiment":{"title":"General Sentiment","enum":["Positive","Negative","Neutral"],"type":"string","description":"`Positive` `Negative` `Neutral`"},"general_sentiment_rate":{"maximum":1,"minimum":0,"title":"General Sentiment Rate","type":"integer"},"items":{"title":"Items","type":"array","items":{"description":"This class is used in SentimentAnalysisDataClass to describe each segment analyzed.\n\nArgs:\n    - segment (str): The segment analyzed\n    - sentiment (Literal['Positve', 'Negative', 'Neutral']) (Case is ignore): Sentiment of segment\n    - sentiment_rate (float between 0 and 1): Rate of sentiment","required":["segment","sentiment","sentiment_rate"],"title":"SegmentSentimentAnalysisDataClass","type":"object","properties":{"segment":{"title":"Segment","type":"string"},"sentiment":{"title":"Sentiment","enum":["Positive","Negative","Neutral"],"type":"string","description":"`Positive` `Negative` `Neutral`"},"sentiment_rate":{"maximum":1,"minimum":0,"title":"Sentiment Rate","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"lettria":{"required":["general_sentiment","general_sentiment_rate","status"],"title":"textsentiment_analysisSentimentAnalysisDataClass","type":"object","properties":{"general_sentiment":{"title":"General Sentiment","enum":["Positive","Negative","Neutral"],"type":"string","description":"`Positive` `Negative` `Neutral`"},"general_sentiment_rate":{"maximum":1,"minimum":0,"title":"General Sentiment Rate","type":"integer"},"items":{"title":"Items","type":"array","items":{"description":"This class is used in SentimentAnalysisDataClass to describe each segment analyzed.\n\nArgs:\n    - segment (str): The segment analyzed\n    - sentiment (Literal['Positve', 'Negative', 'Neutral']) (Case is ignore): Sentiment of segment\n    - sentiment_rate (float between 0 and 1): Rate of sentiment","required":["segment","sentiment","sentiment_rate"],"title":"SegmentSentimentAnalysisDataClass","type":"object","properties":{"segment":{"title":"Segment","type":"string"},"sentiment":{"title":"Sentiment","enum":["Positive","Negative","Neutral"],"type":"string","description":"`Positive` `Negative` `Neutral`"},"sentiment_rate":{"maximum":1,"minimum":0,"title":"Sentiment Rate","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"emvista":{"required":["general_sentiment","general_sentiment_rate","status"],"title":"textsentiment_analysisSentimentAnalysisDataClass","type":"object","properties":{"general_sentiment":{"title":"General Sentiment","enum":["Positive","Negative","Neutral"],"type":"string","description":"`Positive` `Negative` `Neutral`"},"general_sentiment_rate":{"maximum":1,"minimum":0,"title":"General Sentiment Rate","type":"integer"},"items":{"title":"Items","type":"array","items":{"description":"This class is used in SentimentAnalysisDataClass to describe each segment analyzed.\n\nArgs:\n    - segment (str): The segment analyzed\n    - sentiment (Literal['Positve', 'Negative', 'Neutral']) (Case is ignore): Sentiment of segment\n    - sentiment_rate (float between 0 and 1): Rate of sentiment","required":["segment","sentiment","sentiment_rate"],"title":"SegmentSentimentAnalysisDataClass","type":"object","properties":{"segment":{"title":"Segment","type":"string"},"sentiment":{"title":"Sentiment","enum":["Positive","Negative","Neutral"],"type":"string","description":"`Positive` `Negative` `Neutral`"},"sentiment_rate":{"maximum":1,"minimum":0,"title":"Sentiment Rate","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"microsoft":{"required":["general_sentiment","general_sentiment_rate","status"],"title":"textsentiment_analysisSentimentAnalysisDataClass","type":"object","properties":{"general_sentiment":{"title":"General Sentiment","enum":["Positive","Negative","Neutral"],"type":"string","description":"`Positive` `Negative` `Neutral`"},"general_sentiment_rate":{"maximum":1,"minimum":0,"title":"General Sentiment Rate","type":"integer"},"items":{"title":"Items","type":"array","items":{"description":"This class is used in SentimentAnalysisDataClass to describe each segment analyzed.\n\nArgs:\n    - segment (str): The segment analyzed\n    - sentiment (Literal['Positve', 'Negative', 'Neutral']) (Case is ignore): Sentiment of segment\n    - sentiment_rate (float between 0 and 1): Rate of sentiment","required":["segment","sentiment","sentiment_rate"],"title":"SegmentSentimentAnalysisDataClass","type":"object","properties":{"segment":{"title":"Segment","type":"string"},"sentiment":{"title":"Sentiment","enum":["Positive","Negative","Neutral"],"type":"string","description":"`Positive` `Negative` `Neutral`"},"sentiment_rate":{"maximum":1,"minimum":0,"title":"Sentiment Rate","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"ibm":{"required":["general_sentiment","general_sentiment_rate","status"],"title":"textsentiment_analysisSentimentAnalysisDataClass","type":"object","properties":{"general_sentiment":{"title":"General Sentiment","enum":["Positive","Negative","Neutral"],"type":"string","description":"`Positive` `Negative` `Neutral`"},"general_sentiment_rate":{"maximum":1,"minimum":0,"title":"General Sentiment Rate","type":"integer"},"items":{"title":"Items","type":"array","items":{"description":"This class is used in SentimentAnalysisDataClass to describe each segment analyzed.\n\nArgs:\n    - segment (str): The segment analyzed\n    - sentiment (Literal['Positve', 'Negative', 'Neutral']) (Case is ignore): Sentiment of segment\n    - sentiment_rate (float between 0 and 1): Rate of sentiment","required":["segment","sentiment","sentiment_rate"],"title":"SegmentSentimentAnalysisDataClass","type":"object","properties":{"segment":{"title":"Segment","type":"string"},"sentiment":{"title":"Sentiment","enum":["Positive","Negative","Neutral"],"type":"string","description":"`Positive` `Negative` `Neutral`"},"sentiment_rate":{"maximum":1,"minimum":0,"title":"Sentiment Rate","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"connexun":{"required":["general_sentiment","general_sentiment_rate","status"],"title":"textsentiment_analysisSentimentAnalysisDataClass","type":"object","properties":{"general_sentiment":{"title":"General Sentiment","enum":["Positive","Negative","Neutral"],"type":"string","description":"`Positive` `Negative` `Neutral`"},"general_sentiment_rate":{"maximum":1,"minimum":0,"title":"General Sentiment Rate","type":"integer"},"items":{"title":"Items","type":"array","items":{"description":"This class is used in SentimentAnalysisDataClass to describe each segment analyzed.\n\nArgs:\n    - segment (str): The segment analyzed\n    - sentiment (Literal['Positve', 'Negative', 'Neutral']) (Case is ignore): Sentiment of segment\n    - sentiment_rate (float between 0 and 1): Rate of sentiment","required":["segment","sentiment","sentiment_rate"],"title":"SegmentSentimentAnalysisDataClass","type":"object","properties":{"segment":{"title":"Segment","type":"string"},"sentiment":{"title":"Sentiment","enum":["Positive","Negative","Neutral"],"type":"string","description":"`Positive` `Negative` `Neutral`"},"sentiment_rate":{"maximum":1,"minimum":0,"title":"Sentiment Rate","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"nlpcloud":{"required":["general_sentiment","general_sentiment_rate","status"],"title":"textsentiment_analysisSentimentAnalysisDataClass","type":"object","properties":{"general_sentiment":{"title":"General Sentiment","enum":["Positive","Negative","Neutral"],"type":"string","description":"`Positive` `Negative` `Neutral`"},"general_sentiment_rate":{"maximum":1,"minimum":0,"title":"General Sentiment Rate","type":"integer"},"items":{"title":"Items","type":"array","items":{"description":"This class is used in SentimentAnalysisDataClass to describe each segment analyzed.\n\nArgs:\n    - segment (str): The segment analyzed\n    - sentiment (Literal['Positve', 'Negative', 'Neutral']) (Case is ignore): Sentiment of segment\n    - sentiment_rate (float between 0 and 1): Rate of sentiment","required":["segment","sentiment","sentiment_rate"],"title":"SegmentSentimentAnalysisDataClass","type":"object","properties":{"segment":{"title":"Segment","type":"string"},"sentiment":{"title":"Sentiment","enum":["Positive","Negative","Neutral"],"type":"string","description":"`Positive` `Negative` `Neutral`"},"sentiment_rate":{"maximum":1,"minimum":0,"title":"Sentiment Rate","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"sapling":{"required":["general_sentiment","general_sentiment_rate","status"],"title":"textsentiment_analysisSentimentAnalysisDataClass","type":"object","properties":{"general_sentiment":{"title":"General Sentiment","enum":["Positive","Negative","Neutral"],"type":"string","description":"`Positive` `Negative` `Neutral`"},"general_sentiment_rate":{"maximum":1,"minimum":0,"title":"General Sentiment Rate","type":"integer"},"items":{"title":"Items","type":"array","items":{"description":"This class is used in SentimentAnalysisDataClass to describe each segment analyzed.\n\nArgs:\n    - segment (str): The segment analyzed\n    - sentiment (Literal['Positve', 'Negative', 'Neutral']) (Case is ignore): Sentiment of segment\n    - sentiment_rate (float between 0 and 1): Rate of sentiment","required":["segment","sentiment","sentiment_rate"],"title":"SegmentSentimentAnalysisDataClass","type":"object","properties":{"segment":{"title":"Segment","type":"string"},"sentiment":{"title":"Sentiment","enum":["Positive","Negative","Neutral"],"type":"string","description":"`Positive` `Negative` `Neutral`"},"sentiment_rate":{"maximum":1,"minimum":0,"title":"Sentiment Rate","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"google":{"required":["general_sentiment","general_sentiment_rate","status"],"title":"textsentiment_analysisSentimentAnalysisDataClass","type":"object","properties":{"general_sentiment":{"title":"General Sentiment","enum":["Positive","Negative","Neutral"],"type":"string","description":"`Positive` `Negative` `Neutral`"},"general_sentiment_rate":{"maximum":1,"minimum":0,"title":"General Sentiment Rate","type":"integer"},"items":{"title":"Items","type":"array","items":{"description":"This class is used in SentimentAnalysisDataClass to describe each segment analyzed.\n\nArgs:\n    - segment (str): The segment analyzed\n    - sentiment (Literal['Positve', 'Negative', 'Neutral']) (Case is ignore): Sentiment of segment\n    - sentiment_rate (float between 0 and 1): Rate of sentiment","required":["segment","sentiment","sentiment_rate"],"title":"SegmentSentimentAnalysisDataClass","type":"object","properties":{"segment":{"title":"Segment","type":"string"},"sentiment":{"title":"Sentiment","enum":["Positive","Negative","Neutral"],"type":"string","description":"`Positive` `Negative` `Neutral`"},"sentiment_rate":{"maximum":1,"minimum":0,"title":"Sentiment Rate","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"openai":{"required":["general_sentiment","general_sentiment_rate","status"],"title":"textsentiment_analysisSentimentAnalysisDataClass","type":"object","properties":{"general_sentiment":{"title":"General Sentiment","enum":["Positive","Negative","Neutral"],"type":"string","description":"`Positive` `Negative` `Neutral`"},"general_sentiment_rate":{"maximum":1,"minimum":0,"title":"General Sentiment Rate","type":"integer"},"items":{"title":"Items","type":"array","items":{"description":"This class is used in SentimentAnalysisDataClass to describe each segment analyzed.\n\nArgs:\n    - segment (str): The segment analyzed\n    - sentiment (Literal['Positve', 'Negative', 'Neutral']) (Case is ignore): Sentiment of segment\n    - sentiment_rate (float between 0 and 1): Rate of sentiment","required":["segment","sentiment","sentiment_rate"],"title":"SegmentSentimentAnalysisDataClass","type":"object","properties":{"segment":{"title":"Segment","type":"string"},"sentiment":{"title":"Sentiment","enum":["Positive","Negative","Neutral"],"type":"string","description":"`Positive` `Negative` `Neutral`"},"sentiment_rate":{"maximum":1,"minimum":0,"title":"Sentiment Rate","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"tenstorrent":{"required":["general_sentiment","general_sentiment_rate","status"],"title":"textsentiment_analysisSentimentAnalysisDataClass","type":"object","properties":{"general_sentiment":{"title":"General Sentiment","enum":["Positive","Negative","Neutral"],"type":"string","description":"`Positive` `Negative` `Neutral`"},"general_sentiment_rate":{"maximum":1,"minimum":0,"title":"General Sentiment Rate","type":"integer"},"items":{"title":"Items","type":"array","items":{"description":"This class is used in SentimentAnalysisDataClass to describe each segment analyzed.\n\nArgs:\n    - segment (str): The segment analyzed\n    - sentiment (Literal['Positve', 'Negative', 'Neutral']) (Case is ignore): Sentiment of segment\n    - sentiment_rate (float between 0 and 1): Rate of sentiment","required":["segment","sentiment","sentiment_rate"],"title":"SegmentSentimentAnalysisDataClass","type":"object","properties":{"segment":{"title":"Segment","type":"string"},"sentiment":{"title":"Sentiment","enum":["Positive","Negative","Neutral"],"type":"string","description":"`Positive` `Negative` `Neutral`"},"sentiment_rate":{"maximum":1,"minimum":0,"title":"Sentiment Rate","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"amazon":{"required":["general_sentiment","general_sentiment_rate","status"],"title":"textsentiment_analysisSentimentAnalysisDataClass","type":"object","properties":{"general_sentiment":{"title":"General Sentiment","enum":["Positive","Negative","Neutral"],"type":"string","description":"`Positive` `Negative` `Neutral`"},"general_sentiment_rate":{"maximum":1,"minimum":0,"title":"General Sentiment Rate","type":"integer"},"items":{"title":"Items","type":"array","items":{"description":"This class is used in SentimentAnalysisDataClass to describe each segment analyzed.\n\nArgs:\n    - segment (str): The segment analyzed\n    - sentiment (Literal['Positve', 'Negative', 'Neutral']) (Case is ignore): Sentiment of segment\n    - sentiment_rate (float between 0 and 1): Rate of sentiment","required":["segment","sentiment","sentiment_rate"],"title":"SegmentSentimentAnalysisDataClass","type":"object","properties":{"segment":{"title":"Segment","type":"string"},"sentiment":{"title":"Sentiment","enum":["Positive","Negative","Neutral"],"type":"string","description":"`Positive` `Negative` `Neutral`"},"sentiment_rate":{"maximum":1,"minimum":0,"title":"Sentiment Rate","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}}},"title":"textsentiment_analysisResponseModel","type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"object","properties":{"<parameter_name>":{"type":"array","items":{"type":"string"}}},"required":["<parameter_name>"]}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"string"}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"details":{"type":"string","default":"Not Found"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"string"}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const TextSpellCheckCreate = {"body":{"type":"object","properties":{"settings":{"type":"string","default":{},"description":"A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     "},"providers":{"type":"array","items":{"type":"string","minLength":1},"description":"It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.<br>             Providers can also be invoked with specific models (ex: providers: **'amazon/model1, amazon/model2, google/model3'**)"},"fallback_providers":{"type":"array","items":{"type":"string"},"default":[],"description":"Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ","maxItems":5},"response_as_dict":{"type":"boolean","default":true,"description":"Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "},"attributes_as_list":{"type":"boolean","default":false,"description":"Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "},"show_base_64":{"type":"boolean","default":true},"show_original_response":{"type":"boolean","default":false,"description":"Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."},"text":{"type":"string","minLength":1,"description":"Text to analyze","examples":["Hollo, wrld! How re yu?"]},"language":{"type":["string","null"],"description":"Language code for the language the input text is written in (eg: en, fr).","examples":["en"]}},"required":["providers","text"],"$schema":"http://json-schema.org/draft-04/schema#"},"response":{"200":{"properties":{"ai21labs":{"required":["text","status"],"title":"textspell_checkSpellCheckDataClass","type":"object","properties":{"text":{"title":"Text","type":"string"},"items":{"title":"Items","type":"array","items":{"description":"Represents a spell check item with suggestions.\n\nArgs:\n    text (str): The text to spell check.\n    type (str, optional): The type of the text.\n    offset (int): The offset of the text.\n    length (int): The length of the text.\n    suggestions (Sequence[SuggestionItem], optional): The list of suggestions for the misspelled text.\n\nRaises:\n    ValueError: If the offset or length is not positive.\n\nReturns:\n    SpellCheckItem: An instance of the SpellCheckItem class.","required":["text","type","offset","length"],"title":"SpellCheckItem","type":"object","properties":{"text":{"title":"Text","type":"string"},"type":{"title":"Type","type":"string"},"offset":{"minimum":0,"title":"Offset","type":"integer"},"length":{"minimum":0,"title":"Length","type":"integer"},"suggestions":{"title":"Suggestions","type":"array","items":{"description":"Represents a suggestion for a misspelled word.\n\nArgs:\n    suggestion (str): The suggested text.\n    score (float, optional): The score of the suggested text (between 0 and 1).\n\nRaises:\n    ValueError: If the score is not between 0 and 1.\n\nReturns:\n    SuggestionItem: An instance of the SuggestionItem class.","required":["suggestion","score"],"title":"SuggestionItem","type":"object","properties":{"suggestion":{"title":"Suggestion","type":"string"},"score":{"maximum":1,"minimum":0,"title":"Score","type":"integer"}}}}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"prowritingaid":{"required":["text","status"],"title":"textspell_checkSpellCheckDataClass","type":"object","properties":{"text":{"title":"Text","type":"string"},"items":{"title":"Items","type":"array","items":{"description":"Represents a spell check item with suggestions.\n\nArgs:\n    text (str): The text to spell check.\n    type (str, optional): The type of the text.\n    offset (int): The offset of the text.\n    length (int): The length of the text.\n    suggestions (Sequence[SuggestionItem], optional): The list of suggestions for the misspelled text.\n\nRaises:\n    ValueError: If the offset or length is not positive.\n\nReturns:\n    SpellCheckItem: An instance of the SpellCheckItem class.","required":["text","type","offset","length"],"title":"SpellCheckItem","type":"object","properties":{"text":{"title":"Text","type":"string"},"type":{"title":"Type","type":"string"},"offset":{"minimum":0,"title":"Offset","type":"integer"},"length":{"minimum":0,"title":"Length","type":"integer"},"suggestions":{"title":"Suggestions","type":"array","items":{"description":"Represents a suggestion for a misspelled word.\n\nArgs:\n    suggestion (str): The suggested text.\n    score (float, optional): The score of the suggested text (between 0 and 1).\n\nRaises:\n    ValueError: If the score is not between 0 and 1.\n\nReturns:\n    SuggestionItem: An instance of the SuggestionItem class.","required":["suggestion","score"],"title":"SuggestionItem","type":"object","properties":{"suggestion":{"title":"Suggestion","type":"string"},"score":{"maximum":1,"minimum":0,"title":"Score","type":"integer"}}}}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"microsoft":{"required":["text","status"],"title":"textspell_checkSpellCheckDataClass","type":"object","properties":{"text":{"title":"Text","type":"string"},"items":{"title":"Items","type":"array","items":{"description":"Represents a spell check item with suggestions.\n\nArgs:\n    text (str): The text to spell check.\n    type (str, optional): The type of the text.\n    offset (int): The offset of the text.\n    length (int): The length of the text.\n    suggestions (Sequence[SuggestionItem], optional): The list of suggestions for the misspelled text.\n\nRaises:\n    ValueError: If the offset or length is not positive.\n\nReturns:\n    SpellCheckItem: An instance of the SpellCheckItem class.","required":["text","type","offset","length"],"title":"SpellCheckItem","type":"object","properties":{"text":{"title":"Text","type":"string"},"type":{"title":"Type","type":"string"},"offset":{"minimum":0,"title":"Offset","type":"integer"},"length":{"minimum":0,"title":"Length","type":"integer"},"suggestions":{"title":"Suggestions","type":"array","items":{"description":"Represents a suggestion for a misspelled word.\n\nArgs:\n    suggestion (str): The suggested text.\n    score (float, optional): The score of the suggested text (between 0 and 1).\n\nRaises:\n    ValueError: If the score is not between 0 and 1.\n\nReturns:\n    SuggestionItem: An instance of the SuggestionItem class.","required":["suggestion","score"],"title":"SuggestionItem","type":"object","properties":{"suggestion":{"title":"Suggestion","type":"string"},"score":{"maximum":1,"minimum":0,"title":"Score","type":"integer"}}}}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"nlpcloud":{"required":["text","status"],"title":"textspell_checkSpellCheckDataClass","type":"object","properties":{"text":{"title":"Text","type":"string"},"items":{"title":"Items","type":"array","items":{"description":"Represents a spell check item with suggestions.\n\nArgs:\n    text (str): The text to spell check.\n    type (str, optional): The type of the text.\n    offset (int): The offset of the text.\n    length (int): The length of the text.\n    suggestions (Sequence[SuggestionItem], optional): The list of suggestions for the misspelled text.\n\nRaises:\n    ValueError: If the offset or length is not positive.\n\nReturns:\n    SpellCheckItem: An instance of the SpellCheckItem class.","required":["text","type","offset","length"],"title":"SpellCheckItem","type":"object","properties":{"text":{"title":"Text","type":"string"},"type":{"title":"Type","type":"string"},"offset":{"minimum":0,"title":"Offset","type":"integer"},"length":{"minimum":0,"title":"Length","type":"integer"},"suggestions":{"title":"Suggestions","type":"array","items":{"description":"Represents a suggestion for a misspelled word.\n\nArgs:\n    suggestion (str): The suggested text.\n    score (float, optional): The score of the suggested text (between 0 and 1).\n\nRaises:\n    ValueError: If the score is not between 0 and 1.\n\nReturns:\n    SuggestionItem: An instance of the SuggestionItem class.","required":["suggestion","score"],"title":"SuggestionItem","type":"object","properties":{"suggestion":{"title":"Suggestion","type":"string"},"score":{"maximum":1,"minimum":0,"title":"Score","type":"integer"}}}}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"cohere":{"required":["text","status"],"title":"textspell_checkSpellCheckDataClass","type":"object","properties":{"text":{"title":"Text","type":"string"},"items":{"title":"Items","type":"array","items":{"description":"Represents a spell check item with suggestions.\n\nArgs:\n    text (str): The text to spell check.\n    type (str, optional): The type of the text.\n    offset (int): The offset of the text.\n    length (int): The length of the text.\n    suggestions (Sequence[SuggestionItem], optional): The list of suggestions for the misspelled text.\n\nRaises:\n    ValueError: If the offset or length is not positive.\n\nReturns:\n    SpellCheckItem: An instance of the SpellCheckItem class.","required":["text","type","offset","length"],"title":"SpellCheckItem","type":"object","properties":{"text":{"title":"Text","type":"string"},"type":{"title":"Type","type":"string"},"offset":{"minimum":0,"title":"Offset","type":"integer"},"length":{"minimum":0,"title":"Length","type":"integer"},"suggestions":{"title":"Suggestions","type":"array","items":{"description":"Represents a suggestion for a misspelled word.\n\nArgs:\n    suggestion (str): The suggested text.\n    score (float, optional): The score of the suggested text (between 0 and 1).\n\nRaises:\n    ValueError: If the score is not between 0 and 1.\n\nReturns:\n    SuggestionItem: An instance of the SuggestionItem class.","required":["suggestion","score"],"title":"SuggestionItem","type":"object","properties":{"suggestion":{"title":"Suggestion","type":"string"},"score":{"maximum":1,"minimum":0,"title":"Score","type":"integer"}}}}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"sapling":{"required":["text","status"],"title":"textspell_checkSpellCheckDataClass","type":"object","properties":{"text":{"title":"Text","type":"string"},"items":{"title":"Items","type":"array","items":{"description":"Represents a spell check item with suggestions.\n\nArgs:\n    text (str): The text to spell check.\n    type (str, optional): The type of the text.\n    offset (int): The offset of the text.\n    length (int): The length of the text.\n    suggestions (Sequence[SuggestionItem], optional): The list of suggestions for the misspelled text.\n\nRaises:\n    ValueError: If the offset or length is not positive.\n\nReturns:\n    SpellCheckItem: An instance of the SpellCheckItem class.","required":["text","type","offset","length"],"title":"SpellCheckItem","type":"object","properties":{"text":{"title":"Text","type":"string"},"type":{"title":"Type","type":"string"},"offset":{"minimum":0,"title":"Offset","type":"integer"},"length":{"minimum":0,"title":"Length","type":"integer"},"suggestions":{"title":"Suggestions","type":"array","items":{"description":"Represents a suggestion for a misspelled word.\n\nArgs:\n    suggestion (str): The suggested text.\n    score (float, optional): The score of the suggested text (between 0 and 1).\n\nRaises:\n    ValueError: If the score is not between 0 and 1.\n\nReturns:\n    SuggestionItem: An instance of the SuggestionItem class.","required":["suggestion","score"],"title":"SuggestionItem","type":"object","properties":{"suggestion":{"title":"Suggestion","type":"string"},"score":{"maximum":1,"minimum":0,"title":"Score","type":"integer"}}}}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"openai":{"required":["text","status"],"title":"textspell_checkSpellCheckDataClass","type":"object","properties":{"text":{"title":"Text","type":"string"},"items":{"title":"Items","type":"array","items":{"description":"Represents a spell check item with suggestions.\n\nArgs:\n    text (str): The text to spell check.\n    type (str, optional): The type of the text.\n    offset (int): The offset of the text.\n    length (int): The length of the text.\n    suggestions (Sequence[SuggestionItem], optional): The list of suggestions for the misspelled text.\n\nRaises:\n    ValueError: If the offset or length is not positive.\n\nReturns:\n    SpellCheckItem: An instance of the SpellCheckItem class.","required":["text","type","offset","length"],"title":"SpellCheckItem","type":"object","properties":{"text":{"title":"Text","type":"string"},"type":{"title":"Type","type":"string"},"offset":{"minimum":0,"title":"Offset","type":"integer"},"length":{"minimum":0,"title":"Length","type":"integer"},"suggestions":{"title":"Suggestions","type":"array","items":{"description":"Represents a suggestion for a misspelled word.\n\nArgs:\n    suggestion (str): The suggested text.\n    score (float, optional): The score of the suggested text (between 0 and 1).\n\nRaises:\n    ValueError: If the score is not between 0 and 1.\n\nReturns:\n    SuggestionItem: An instance of the SuggestionItem class.","required":["suggestion","score"],"title":"SuggestionItem","type":"object","properties":{"suggestion":{"title":"Suggestion","type":"string"},"score":{"maximum":1,"minimum":0,"title":"Score","type":"integer"}}}}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}}},"title":"textspell_checkResponseModel","type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"object","properties":{"<parameter_name>":{"type":"array","items":{"type":"string"}}},"required":["<parameter_name>"]}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"string"}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"details":{"type":"string","default":"Not Found"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"string"}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const TextSummarizeCreate = {"body":{"type":"object","properties":{"settings":{"type":"string","default":{},"description":"A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     "},"providers":{"type":"array","items":{"type":"string","minLength":1},"description":"It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.<br>             Providers can also be invoked with specific models (ex: providers: **'amazon/model1, amazon/model2, google/model3'**)"},"fallback_providers":{"type":"array","items":{"type":"string"},"default":[],"description":"Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ","maxItems":5},"response_as_dict":{"type":"boolean","default":true,"description":"Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "},"attributes_as_list":{"type":"boolean","default":false,"description":"Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "},"show_base_64":{"type":"boolean","default":true},"show_original_response":{"type":"boolean","default":false,"description":"Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."},"text":{"type":"string","minLength":1,"description":"Text to analyze","examples":["Barack Hussein Obama is an American politician who served as the 44th president of the United States from 2009 to 2017. A member of the Democratic Party, Obama was the first African-American president of the United States. He previously served as a U.S. senator from Illinois from 2005 to 2008 and as an Illinois state senator from 1997 to 2004."]},"language":{"type":["string","null"],"description":"Language code for the language the input text is written in (eg: en, fr).","examples":["en"]},"output_sentences":{"type":"integer","minimum":1,"default":1,"examples":[3]}},"required":["providers","text"],"$schema":"http://json-schema.org/draft-04/schema#"},"response":{"200":{"properties":{"ai21labs":{"required":["result","status"],"title":"textsummarizeSummarizeDataClass","type":"object","properties":{"result":{"title":"Result","type":"string"},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"oneai":{"required":["result","status"],"title":"textsummarizeSummarizeDataClass","type":"object","properties":{"result":{"title":"Result","type":"string"},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"alephalpha":{"required":["result","status"],"title":"textsummarizeSummarizeDataClass","type":"object","properties":{"result":{"title":"Result","type":"string"},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"anthropic":{"required":["result","status"],"title":"textsummarizeSummarizeDataClass","type":"object","properties":{"result":{"title":"Result","type":"string"},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"emvista":{"required":["result","status"],"title":"textsummarizeSummarizeDataClass","type":"object","properties":{"result":{"title":"Result","type":"string"},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"writesonic":{"required":["result","status"],"title":"textsummarizeSummarizeDataClass","type":"object","properties":{"result":{"title":"Result","type":"string"},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"microsoft":{"required":["result","status"],"title":"textsummarizeSummarizeDataClass","type":"object","properties":{"result":{"title":"Result","type":"string"},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"connexun":{"required":["result","status"],"title":"textsummarizeSummarizeDataClass","type":"object","properties":{"result":{"title":"Result","type":"string"},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"cohere":{"required":["result","status"],"title":"textsummarizeSummarizeDataClass","type":"object","properties":{"result":{"title":"Result","type":"string"},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"nlpcloud":{"required":["result","status"],"title":"textsummarizeSummarizeDataClass","type":"object","properties":{"result":{"title":"Result","type":"string"},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"meaningcloud":{"required":["result","status"],"title":"textsummarizeSummarizeDataClass","type":"object","properties":{"result":{"title":"Result","type":"string"},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"openai":{"required":["result","status"],"title":"textsummarizeSummarizeDataClass","type":"object","properties":{"result":{"title":"Result","type":"string"},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}}},"title":"textsummarizeResponseModel","type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"object","properties":{"<parameter_name>":{"type":"array","items":{"type":"string"}}},"required":["<parameter_name>"]}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"string"}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"details":{"type":"string","default":"Not Found"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"string"}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const TextSyntaxAnalysisCreate = {"body":{"type":"object","properties":{"settings":{"type":"string","default":{},"description":"A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     "},"providers":{"type":"array","items":{"type":"string","minLength":1},"description":"It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.<br>             Providers can also be invoked with specific models (ex: providers: **'amazon/model1, amazon/model2, google/model3'**)"},"fallback_providers":{"type":"array","items":{"type":"string"},"default":[],"description":"Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ","maxItems":5},"response_as_dict":{"type":"boolean","default":true,"description":"Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "},"attributes_as_list":{"type":"boolean","default":false,"description":"Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "},"show_base_64":{"type":"boolean","default":true},"show_original_response":{"type":"boolean","default":false,"description":"Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."},"text":{"type":"string","minLength":1,"description":"Text to analyze","examples":["Barack Hussein Obama is an American politician who served as the 44th president of the United States from 2009 to 2017. A member of the Democratic Party, Obama was the first African-American president of the United States. He previously served as a U.S. senator from Illinois from 2005 to 2008 and as an Illinois state senator from 1997 to 2004."]},"language":{"type":["string","null"],"description":"Language code for the language the input text is written in (eg: en, fr).","examples":["en"]}},"required":["providers","text"],"$schema":"http://json-schema.org/draft-04/schema#"},"response":{"200":{"properties":{"lettria":{"required":["status"],"title":"textsyntax_analysisSyntaxAnalysisDataClass","type":"object","properties":{"items":{"title":"Items","type":"array","items":{"required":["word","importance","tag","lemma"],"title":"InfosSyntaxAnalysisDataClass","type":"object","properties":{"word":{"title":"Word","type":"string"},"importance":{"title":"Importance","type":"integer"},"tag":{"title":"Tag","type":"string"},"lemma":{"title":"Lemma","type":"string"},"others":{"title":"Others","type":"object","additionalProperties":true}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"emvista":{"required":["status"],"title":"textsyntax_analysisSyntaxAnalysisDataClass","type":"object","properties":{"items":{"title":"Items","type":"array","items":{"required":["word","importance","tag","lemma"],"title":"InfosSyntaxAnalysisDataClass","type":"object","properties":{"word":{"title":"Word","type":"string"},"importance":{"title":"Importance","type":"integer"},"tag":{"title":"Tag","type":"string"},"lemma":{"title":"Lemma","type":"string"},"others":{"title":"Others","type":"object","additionalProperties":true}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"ibm":{"required":["status"],"title":"textsyntax_analysisSyntaxAnalysisDataClass","type":"object","properties":{"items":{"title":"Items","type":"array","items":{"required":["word","importance","tag","lemma"],"title":"InfosSyntaxAnalysisDataClass","type":"object","properties":{"word":{"title":"Word","type":"string"},"importance":{"title":"Importance","type":"integer"},"tag":{"title":"Tag","type":"string"},"lemma":{"title":"Lemma","type":"string"},"others":{"title":"Others","type":"object","additionalProperties":true}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"google":{"required":["status"],"title":"textsyntax_analysisSyntaxAnalysisDataClass","type":"object","properties":{"items":{"title":"Items","type":"array","items":{"required":["word","importance","tag","lemma"],"title":"InfosSyntaxAnalysisDataClass","type":"object","properties":{"word":{"title":"Word","type":"string"},"importance":{"title":"Importance","type":"integer"},"tag":{"title":"Tag","type":"string"},"lemma":{"title":"Lemma","type":"string"},"others":{"title":"Others","type":"object","additionalProperties":true}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"amazon":{"required":["status"],"title":"textsyntax_analysisSyntaxAnalysisDataClass","type":"object","properties":{"items":{"title":"Items","type":"array","items":{"required":["word","importance","tag","lemma"],"title":"InfosSyntaxAnalysisDataClass","type":"object","properties":{"word":{"title":"Word","type":"string"},"importance":{"title":"Importance","type":"integer"},"tag":{"title":"Tag","type":"string"},"lemma":{"title":"Lemma","type":"string"},"others":{"title":"Others","type":"object","additionalProperties":true}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"eden-ai":{"required":["status"],"title":"textsyntax_analysisSyntaxAnalysisDataClass","type":"object","properties":{"items":{"title":"Items","type":"array","items":{"required":["word","importance","tag","lemma"],"title":"InfosSyntaxAnalysisDataClass","type":"object","properties":{"word":{"title":"Word","type":"string"},"importance":{"title":"Importance","type":"integer"},"tag":{"title":"Tag","type":"string"},"lemma":{"title":"Lemma","type":"string"},"others":{"title":"Others","type":"object","additionalProperties":true}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}}},"title":"textsyntax_analysisResponseModel","type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"object","properties":{"<parameter_name>":{"type":"array","items":{"type":"string"}}},"required":["<parameter_name>"]}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"string"}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"details":{"type":"string","default":"Not Found"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"string"}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const TextTopicExtractionCreate = {"body":{"type":"object","properties":{"settings":{"type":"string","default":{},"description":"A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     "},"providers":{"type":"array","items":{"type":"string","minLength":1},"description":"It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results.<br>             Providers can also be invoked with specific models (ex: providers: **'amazon/model1, amazon/model2, google/model3'**)"},"fallback_providers":{"type":"array","items":{"type":"string"},"default":[],"description":"Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    ","maxItems":5},"response_as_dict":{"type":"boolean","default":true,"description":"Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "},"attributes_as_list":{"type":"boolean","default":false,"description":"Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "},"show_base_64":{"type":"boolean","default":true},"show_original_response":{"type":"boolean","default":false,"description":"Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."},"text":{"type":"string","minLength":1,"description":"Text to analyze","examples":["That actor on TV makes movies in Hollywood and also stars in a variety of popular new TV shows."]},"language":{"type":["string","null"],"description":"Language code for the language the input text is written in (eg: en, fr).","examples":["en"]}},"required":["providers","text"],"$schema":"http://json-schema.org/draft-04/schema#"},"response":{"200":{"properties":{"tenstorrent":{"required":["status"],"title":"texttopic_extractionTopicExtractionDataClass","type":"object","properties":{"items":{"title":"Items","type":"array","items":{"required":["category","importance"],"title":"ExtractedTopic","type":"object","properties":{"category":{"title":"Category","type":"string"},"importance":{"title":"Importance","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"google":{"required":["status"],"title":"texttopic_extractionTopicExtractionDataClass","type":"object","properties":{"items":{"title":"Items","type":"array","items":{"required":["category","importance"],"title":"ExtractedTopic","type":"object","properties":{"category":{"title":"Category","type":"string"},"importance":{"title":"Importance","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"ibm":{"required":["status"],"title":"texttopic_extractionTopicExtractionDataClass","type":"object","properties":{"items":{"title":"Items","type":"array","items":{"required":["category","importance"],"title":"ExtractedTopic","type":"object","properties":{"category":{"title":"Category","type":"string"},"importance":{"title":"Importance","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"openai":{"required":["status"],"title":"texttopic_extractionTopicExtractionDataClass","type":"object","properties":{"items":{"title":"Items","type":"array","items":{"required":["category","importance"],"title":"ExtractedTopic","type":"object","properties":{"category":{"title":"Category","type":"string"},"importance":{"title":"Importance","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}},"eden-ai":{"required":["status"],"title":"texttopic_extractionTopicExtractionDataClass","type":"object","properties":{"items":{"title":"Items","type":"array","items":{"required":["category","importance"],"title":"ExtractedTopic","type":"object","properties":{"category":{"title":"Category","type":"string"},"importance":{"title":"Importance","type":"integer"}}}},"original_response":{"default":null,"description":"original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request","title":"Original Response"},"status":{"title":"Status","enum":["sucess","fail"],"type":"string","description":"`sucess` `fail`"}}}},"title":"texttopic_extractionResponseModel","type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"object","properties":{"<parameter_name>":{"type":"array","items":{"type":"string"}}},"required":["<parameter_name>"]}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"string"}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"details":{"type":"string","default":"Not Found"}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"error":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"string"}},"required":["message","type"]}},"required":["error"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
export { TextAiDetectionCreate, TextAnonymizationCreate, TextChatCreate, TextChatStreamCreate, TextCodeGenerationCreate, TextCustomClassificationCreate, TextCustomNamedEntityRecognitionCreate, TextEmbeddingsCreate, TextEmotionDetectionCreate, TextEntitySentimentCreate, TextGenerationCreate, TextKeywordExtractionCreate, TextModerationCreate, TextNamedEntityRecognitionCreate, TextPlagiaDetectionCreate, TextPromptOptimizationCreate, TextQuestionAnswerCreate, TextSearchCreate, TextSentimentAnalysisCreate, TextSpellCheckCreate, TextSummarizeCreate, TextSyntaxAnalysisCreate, TextTopicExtractionCreate }
